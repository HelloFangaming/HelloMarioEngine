<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_big_run</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_enemymaskbig</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mario as he runs on walls and ceilings

//Destroy the spinner if it exists
with obj_spinner instance_destroy()

//Make Mario invisible, and disable his controls
with obj_mario
{
    visible = 0
    disablecontrols = 1
}

//Animate
image_speed = 0.3

//Go up
direction = 90

//Go fast
speed = 3

//Rotational direction (Concave wall triangle corners)
//1: Counterclockwise, -1: Clockwise
direct = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prepare Mario to stop wallrunning

//If Mario exists
if instance_exists(obj_mario)
{

    //Make him visible and enable controls
    with obj_mario
    {
        visible = 1
        disablecontrols = 0
    }

    //If Mario is running up, use the regular direction
    if direction = 90
        obj_mario.direct = direct

    //Otherwise, reverse his facing direction
    else
        obj_mario.direct = -direct

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle wall running logic

//Destroy self if Mario does not exist
if not instance_exists(obj_mario)
{
    instance_destroy()
    exit
}

//Use the run sprite
sprite_index = scr_mariorun()

//Snap Mario to self
obj_mario.x = x
obj_mario.y = y-2
obj_mario.speed = 0

//If the jump key is pressed
if keyboard_check_pressed(vk_shift)
{

    //Play the jump sound
    audio_play_sound(snd_jump,0,0)

    //If Mario is running up, jump off the wall
    if direction = 90
    {
        obj_mario.vspeed = vspeed
        obj_mario.hspeed = -3*direct
    }

    //If Mario is running down, jump off the wall
    else if direction = 270
    {
        obj_mario.vspeed = vspeed
        obj_mario.hspeed = 3*direct
    }

    //If Mario is running on the ceiling, jump off
    else
    {
        obj_mario.hspeed = hspeed
        obj_mario.vspeed = 3
    }

    //Destroy
    instance_destroy()

}

//If Mario is running around clockwise
else if direct = 1
{

    //Speed up if the run and right key is being pressed
    if keyboard_check(vk_control)
    and keyboard_check(vk_right)
        speed += 0.1

    //Otherwise, slow down
    else
        speed -= 0.05

    //If Mario is running up a wall on the right
    if direction = 90
    {

        //Destroy self if there is no solid to the right
        if not place_meeting(x+8,y,obj_solid)
        {
            obj_mario.hspeed = -vspeed
            instance_destroy()
        }

    }

    //If Mario is running left on a ceiling
    else if direction = 180
    {

        //Destroy self if there is no solid above
        if not place_meeting(x,y-8,obj_solid)
        {
            obj_mario.hspeed = hspeed
            instance_destroy()
        }

        //Check for an inverted right wall triangle
        var col = instance_position(x,y-8,obj_walltriangle_ir)
        if col
        {
            x = col.x-16
            y = col.y
            direction = 90
        }

    }

    //If Mario is running down a wall on the left
    else if direction = 270
    {

        //Destroy self if there is no solid to the left
        if not place_meeting(x-8,y,obj_solid)
        {
            obj_mario.vspeed = vspeed
            instance_destroy()
        }

        //Check for an inverted left wall triangle
        var col = instance_position(x-24,y+16,obj_walltriangle_il)
        if col
        {
            x = col.x
            y = col.y+16
            direction = 180
        }

    }

}

//If Mario is running around counterclockwise
else if direct = -1
{

    //Speed up if the run and left key is being pressed
    if keyboard_check(vk_control)
    and keyboard_check(vk_left)
        speed += 0.1

    //Otherwise, slow down
    else
        speed -= 0.05

    //If Mario is running up a wall on the left
    if direction = 90
    {

        //Destroy self if there is no solid to the left
        if not place_meeting(x-8,y,obj_solid)
        {
            obj_mario.hspeed = vspeed
            instance_destroy()
        }

    }

    //If Mario is running right on a ceiling
    else if direction = 0
    {

        //Destroy self if there is no solid above
        if not place_meeting(x,y-8,obj_solid)
        {
            obj_mario.hspeed = hspeed
            instance_destroy()
        }

        //Check for an inverted left wall triangle
        var col = instance_position(x,y-8,obj_walltriangle_il)
        if col
        {
            x = col.x+32
            y = col.y
            direction = 90
        }

    }

    //If Mario is running down a wall on the right
    else if direction = 270
    {

        //Destroy self if there is no solid to the right
        if not place_meeting(x+8,y,obj_solid)
        {
            obj_mario.vspeed = vspeed
            instance_destroy()
        }

        //Check for an inverted right wall triangle
        var col = instance_position(x+24,y+16,obj_walltriangle_ir)
        if col
        {
            x = col.x+16
            y = col.y+16
            direction = 0
        }

    }

}

//Destroy self if Mario is too slow, or runs into a solid
if speed &lt; 1.6
or place_meeting(x,y,obj_solid)
{
    obj_mario.speed = speed
    obj_mario.direction = direction
    instance_destroy()
}

//Stop Mario from running too fast
else if speed &gt; 3
    speed = 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_walltriangle_il">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Mario run from the ceiling to the left wall
if direct = 1
and direction = 180
{
    x = other.x+16
    y = other.y+16
    direction = 270
}

//Make Mario run from the left wall to the ceiling
else if direct = -1
and direction = 90
{
    x = other.x+32
    y = other.y
    direction = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_walltriangle_l">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Mario run from the left wall to the ground
if direct = 1
and direction = 270
{
    obj_mario.hspeed = speed
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_walltriangle_ir">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Mario run from the right wall to the ceiling
if direct = 1
and direction = 90
{
    x = other.x-16
    y = other.y
    direction = 180
}

//Make Mario run from the ceiling to the right wall
else if direct = -1
and direction = 0
{
    x = other.x
    y = other.y+16
    direction = 270
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_walltriangle_r">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Mario run from the right wall to the ground
if direct = -1
and direction = 270
{
    obj_mario.hspeed = -speed
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draws Mario
if instance_exists(obj_mario)
{

    //Make Mario flash
    if obj_mario.isflashing = 1
        shader_set(sha_invert)

    //Draw Mario
    if direct = 1
    {
        if direction = 90
            draw_sprite_ext(sprite_index,image_index,round(x)-16,round(y)+16,1,1,90,c_white,obj_mario.image_alpha)
        else if direction = 180
            draw_sprite_ext(sprite_index,image_index,round(x),round(y)+32,1,1,180,c_white,obj_mario.image_alpha)
        else
            draw_sprite_ext(sprite_index,image_index,round(x)+16,round(y)+16,1,1,270,c_white,obj_mario.image_alpha)
    }
    else
    {
        if direction = 90
            draw_sprite_ext(sprite_index,image_index,round(x)+16,round(y)+16,-1,1,270,c_white,obj_mario.image_alpha)
        else if direction = 0
            draw_sprite_ext(sprite_index,image_index,round(x),round(y)+32,-1,1,180,c_white,obj_mario.image_alpha)
        else
            draw_sprite_ext(sprite_index,image_index,round(x)-16,round(y)+16,-1,1,90,c_white,obj_mario.image_alpha)
    }

    //Reset flashing
    if obj_mario.isflashing = 1
        shader_reset()

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
