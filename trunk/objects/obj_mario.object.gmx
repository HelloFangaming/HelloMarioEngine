<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_small_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///It's a me, Mario!

//Mario's current state
//0: Stand, 1: Walk, 2: Jump, 3: Climb 4:Wall Climb
state = 0

//Mario's direction
//-1: Left, 1: Right
direct = 1

//Whether Mario is holding something
//0: Nothing, 1: Overhead, 2: On Front 3: Can't Hold Stuff
if global.yoshi = 1
    holding = 3
else
    holding = 0

//Is Mario running?
isrun = 0

//Is Mario jumping?
isjump = 0

//Variable jump state
//0: Can Jump, 1: Variable Jump, 2: No Variable Jump
jumpnow = 0

//Is Mario skidding?
skidnow = 0

//Is Mario swimming?
isswim = 0

//Is Mario ducking?
isduck = 0

//Is Mario invincible?
invincible = 0

//Is Mario hitting a net?
kk = 0

//Is Mario kicking something?
iamkicking = 0

//Can Mario turn around?
canturn = 0

//Is Mario spin jumping?
stompstyle = 0

//Is Mario on a slippery surface?
isslip = 0

//Is carrot/bee Mario floating?
isfloating = 0

//Is the float sound effect playing?
floatnow = 0

//How much longer can bee Mario fly?
beefly = 0

//Is Mario firing a projectile?
firing = 0

//Is leaf/tanooki Mario wiggling his tail?
wiggle = 0

//What direction is frog/penguin Mario swimming in?
swimtype = 0

//Is frog/penguin Mario's swim sound effect looping?
noisy = 0

//Is Mario flashing?
isflashing = 0

//How many consecutive stomps has Mario made?
hitpoint = 0

//Handles Mario's skid smoke
alarm[5] = 8

//Handles Mario's underwater bubbles
alarm[9] = 24 + random(96)

//Did Mario carry something over from another room?
if global.shallihold &gt; 0
{
    holding = global.shallihold
    global.shallihold = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop these sounds from playing

//Skid sound
if skidnow = 1
    audio_stop_sound(snd_skid)

//Swim sound
if noisy = 1
    audio_stop_sound(snd_swim)

//Float sound
if floatnow = 1
    audio_stop_sound(snd_spin)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Mario's invincibility flashing

//Keep flashing until the invincibility is done
if instance_exists(obj_invincibility)
{
    if obj_invincibility.newstar = 0
    {
        if isflashing = 0
            isflashing = 1
        else
            isflashing = 0
        alarm[10] = 4
    }
    else
        isflashing = 0
}
else
    isflashing = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Mario's underwater bubble effect
if isswim = 1
    instance_create(x-2+6*direct,bbox_top+7,obj_bubble)
alarm[9] = 24 + random(96)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Mario's second spin jump projectile
var varid

//Fire Ball
if global.powerup = cs_fire
and instance_number(obj_fireball) &lt; 2
{
    varid = instance_create(x,y+16,obj_fireball)
    varid.hspeed = -3*direct
}

//Hammer
else if global.powerup = cs_hammer
and instance_number(obj_hammer) &lt; 2
{
    varid = instance_create(x,y+16,obj_hammer)
    varid.hspeed = -2*direct
}

//Ice Ball
else if (global.powerup = cs_ice or global.powerup = cs_penguin)
and instance_number(obj_iceball) &lt; 1
{
    varid = instance_create(x,y+16,obj_iceball)
    varid.hspeed = -3*direct
}

//Super Ball
else if global.powerup = cs_super
and instance_number(obj_superball) &lt; 2
{
    varid = instance_create(x,y+16,obj_superball)
    varid.hspeed = -2*direct
}

//Shuriken
else if global.powerup = cs_ninja
and instance_number(obj_shuriken) &lt; 2
{
    varid = instance_create(x,y+16,obj_shuriken)
    varid.hspeed = -5*direct
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Mario's first spin jump projectile
var varid

//Fire Ball
if global.powerup = cs_fire
and instance_number(obj_fireball) &lt; 2
{
    varid = instance_create(x,y+16,obj_fireball)
    varid.hspeed = 3*direct
}

//Hammer
else if global.powerup = cs_hammer
and instance_number(obj_hammer) &lt; 2
{
    varid = instance_create(x,y+16,obj_hammer)
    varid.hspeed = 2*direct
}

//Ice Ball
else if (global.powerup = cs_ice or global.powerup = cs_penguin)
and instance_number(obj_iceball) &lt; 1
{
    varid = instance_create(x,y+16,obj_iceball)
    varid.hspeed = 3*direct
}

//Super Ball
else if global.powerup = cs_super
and instance_number(obj_superball) &lt; 2
{
    varid = instance_create(x,y+16,obj_superball)
    varid.hspeed = 2*direct
}

//Shuriken
else if global.powerup = cs_ninja
and instance_number(obj_shuriken) &lt; 2
{
    varid = instance_create(x,y+20,obj_shuriken)
    varid.hspeed = 5*direct
}

//Second Projectile
alarm[8] = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Finish Mario's kicking animation
iamkicking = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Mario's skid smoke
if skidnow = 1
{
    if direct = 1
    {
        with instance_create(x+1,y+24,obj_smoke)
        {
            sprite_index = spr_skidsmoke
            depth = -6
        }
    }
    else
    {
        with instance_create(x-8,y+24,obj_smoke)
        {
            sprite_index = spr_skidsmoke
            depth = -6
        }
    }
}
alarm[5] = 8
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End Mario's net kick
kk = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Mario no longer invincible
invincible = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Mario's alpha blink stop
image_alpha = 1
if invincible = 1
    alarm[1] = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Mario's alpha blink
image_alpha = 0.4
alarm[2] = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset holding variable
holding = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Mario's sprites

//Disable ducking for certain powerups
if global.powerup = cs_small
or global.powerup = cs_frog
    isduck = 0

//If Mario is not ducking
if isduck = 0
{

    //Select Mask
    if global.powerup = cs_small
        mask_index = spr_smallmask
    else
        mask_index = spr_bigmask

    //Shoot Animation
    if global.powerup = cs_fire
    or global.powerup = cs_hammer
    or global.powerup = cs_bomb
    or global.powerup = cs_ice
    or global.powerup = cs_super
    or global.powerup = cs_ninja
    or global.powerup = cs_penguin
    or global.powerup = cs_boomerang
    {
        if firing &gt; 0
            firing -= 1
    }
    else
        firing = 0

    //Tail Wiggling
    if global.powerup = cs_leaf
    or global.powerup = cs_tanooki
    {
        if state = 2
        and stompstyle = 0
        {
            if wiggle &gt; 1
                wiggle -= 1
            if wiggle &gt; 12
                image_index = 3
            else if wiggle &gt; 8
                image_index = 2
            else if wiggle &gt; 4
                image_index = 1
            else if wiggle &gt; 1
                image_index = 2
            else if wiggle = 1
                image_index = 1
            else
                image_index = 0
        }
        else
            wiggle = 0
    }
    else
        wiggle = 0

    //Not Holding Anything
    if holding = 0
    {

        //Standing State
        if state = 0
        {

            //Shooting Projectiles
            if firing &gt; 0
            {
                image_speed = 0
                if firing &lt; 6 and firing &gt; 3
                    image_index = 1
                else
                    image_index = 0
                sprite_index = scr_marioshoot()
            }

            //Default Standing
            else
            {
                image_speed = 0
                image_index = 0
                sprite_index = scr_mariowalk()
            }

        }

        //Walking State
        else if state = 1
        {
            image_speed = hspeed/10

            //Frog Mario only walks
            if global.powerup = cs_frog
                sprite_index = scr_mariowalk()

            //Skid when moving and facing in opposite directions
            else if (direct = 1 and hspeed &lt; -0.001)
            or (direct = -1 and hspeed &gt; 0.001)
            {
                sprite_index = scr_marioskid()
                if skidnow = 0
                {
                    skidnow = 1
                    audio_play_sound(snd_skid,1,1)
                }
            }

            //Default Walking
            else
            {
                //Run only when P-Meter is full
                if obj_camera.pmeter &lt; 6
                    sprite_index = scr_mariowalk()
                else
                    sprite_index = scr_mariorun()
            }

        }

        //Jumping State
        else if state = 2
        {

            //Swimming
            if isswim = 1
            {
                sprite_index = scr_marioswim()
                image_speed = 0
                if vspeed &lt; 0
                    image_index = 1
                else
                    image_index = 0
            }

            //Spin Jumping
            else if stompstyle = 1
            {

                //Propeller Mario Flying
                if global.powerup = cs_propeller
                {
                    image_speed = vspeed/10
                    sprite_index = spr_mario_propeller_fly
                }

                //Default Spin Jumping
                else
                {
                    image_speed = 0.5
                    sprite_index = scr_mariowarp()
                }
            }

            //Shooting Projectiles
            else if firing &gt; 0
            {
                image_speed = 0
                if firing &lt; 6 and firing &gt; 3
                    image_index = 1
                else
                    image_index = 0

                //Penguin Mario Hotfix
                if global.powerup = cs_penguin
                    sprite_index = spr_mario_penguin_shoot2
                else
                    sprite_index = scr_marioswim()
            }

            //Default Jumping
            else
            {

                //Floating Animation
                if global.powerup = cs_carrot
                or global.powerup = cs_bee
                {
                    if isfloating = 1
                        image_speed = 0.15
                    else
                        image_index = 0
                }

                //Run only when P-Meter is full
                if obj_camera.pmeter &lt; 6
                    sprite_index = scr_mariojump()
                else
                    sprite_index = scr_mariorunjump()
            }

        }

        //Special Swimming Animations
        if global.powerup = cs_frog
        or global.powerup = cs_penguin
        {
            if isswim = 1
            {
                if swimtype = 0
                    sprite_index = scr_marioswim()
                if swimtype = 1
                    sprite_index = scr_marioswim2()
                if swimtype = 2
                    sprite_index = scr_marioswim3()
                if noisy = 1
                    image_speed = 0.15
                else
                    image_speed = 0
            }
        }

    }

    //Holding Something
    else
    {

        //Standing State
        if state = 0
        {
            image_speed = 0
            image_index = 0
        }

        //Walking State
        if state = 1
            image_speed = hspeed/10

        //Jumping State
        if state = 2
        {
            image_speed = 0
            if global.powerup = cs_small
                image_index = 1
            else
                image_index = 2
        }

        //Carrying an item above his head
        if holding = 1
            sprite_index = scr_mariocarry()

        //Holding an item on front of him
        else if holding = 2
            sprite_index = scr_mariohold()

    }

    //Climbing
    if state = 3
    {
        if speed = 0
            image_speed = 0
        else
            image_speed = 0.15
        sprite_index = scr_marioclimb()
    }

    //Ninja Mario Wall Climbing
    else if global.powerup = cs_ninja
    and state = 4
    {
        sprite_index = spr_mario_ninja_wallclimb
        if vspeed = 0
            image_speed = 0
        else
            image_speed = 0.15
    }

    //Kicking Animation
    if iamkicking = 1
        sprite_index = scr_mariokick()

}

//If Mario is ducking
else if isduck = 1
{

    //Use Small Mask
    mask_index = spr_smallmask

    //Default Ducking
    sprite_index = scr_marioduck()

}

//Stop the skid sound effect
if sprite_index != scr_marioskid()
and skidnow = 1
{
    audio_stop_sound(snd_skid)
    skidnow = 0
}

//Adjust isjump variable
if state = 2
    isjump = 1
else
    isjump = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Mario's physics and movement

//Select a different step event based on Mario's state
if isswim = 0
{

    //Climb script
    if state = 3
        event_user(4)

    //Wall climb script
    else if state = 4
        event_user(5)

    //Default movement script
    else
        event_user(2)

}

//Swim script
else
    event_user(3)

//If Mario is not climbing or wall climbing
if state &lt; 3
{

    //If Mario is bumping into a wall to the right
    if hspeed &gt; 0
    and collision_rectangle(bbox_right,bbox_top+4,bbox_right+1,bbox_bottom-1,obj_solid,1,0)
    {

        //Stop Mario's horizontal speed
        hspeed = 0

        //Prevent Mario from getting embed into the wall
        while collision_rectangle(bbox_right,bbox_top+4,bbox_right,bbox_bottom-1,obj_solid,1,0)
        and not collision_point(x,bbox_top+4,obj_solid,0,0)
            x-=1

    }

    //If Mario is bumping into a wall to the left
    else if hspeed &lt; 0
    and collision_rectangle(bbox_left-1,bbox_top+4,bbox_left,bbox_bottom-1,obj_solid,1,0)
    {

        //Stop Mario's horizontal speed
        hspeed = 0

        //Prevent Mario from getting embed into the wall
        while collision_rectangle(bbox_left,bbox_top+4,bbox_left,bbox_bottom-1,obj_solid,1,0)
        and not collision_point(x,bbox_top+4,obj_solid,0,0)
            x+=1

    }

    //If Mario's head is bumping the ceiling
    if vspeed &lt; 0
    and collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_top,obj_solid,1,0)
    {

        //Prevent Mario's head from getting embed in the ceiling
        if not collision_rectangle(bbox_left,bbox_bottom-1,bbox_right,bbox_bottom,obj_solidtop,0,0)
        and not collision_rectangle(bbox_left,bbox_bottom-1,bbox_right,bbox_bottom,obj_slopeparent,1,0)
            while collision_rectangle(bbox_left,bbox_top+1,bbox_right,bbox_top+1,obj_solid,1,0)
                y+=1

        //Bump sound
        audio_play_sound(snd_bump,0,0)

        //Send Mario downwards
        vspeed = 1

        //Stop variable jumping
        jumpnow = 2

        //Max out Bee Mario's flight timer
        beefly = 128

    }

    //Stops Mario from ducking
    if isduck = 1
    and not keyboard_check(vk_down)
    and isjump = 0
        isduck = 0

}

//Deals with slope collisions
while collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_slopeparent,1,0)
    y-=1

//Prevents Mario from going too high
if y &lt; -48
    y = -48

//Kill Mario if he falls out of the room
else if bbox_top &gt; room_height
{
    instance_create(x,room_height-32,obj_deadmario)
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_slopeparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle slope collision
if vspeed &gt; 0
{
    //Stop vertical movement
    vspeed = 0
    gravity = 0

    //End jump state
    if hspeed = 0
        state = 0
    else
        state = 1

    //Allow Mario to jump
    if jumpnow = 2
        jumpnow = 0

    //Reset hit counter
    hitpoint = 0

    //Reset bee flying
    beefly = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solidtop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle solid top collision

//Is Mario hign enough to be standing on it?
if y &lt; other.y-27 and vspeed &gt; 0
{
    //Snap to position
    y = other.y-32

    //Stop vertical movement
    vspeed = 0
    gravity = 0

    //End jump state
    if hspeed = 0
        state = 0
    else
        state = 1

    //Allow Mario to jump
    if jumpnow = 2
        jumpnow = 0

    //Reset hit counter
    hitpoint = 0

    //Reset bee flying
    beefly = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Makes Mario duck
if global.powerup &gt; cs_small
and global.powerup != cs_frog
and state &lt; 2
and isduck = 0
and holding = 0
and stompstyle = 0
    isduck = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Makes Mario start climbing on obj_climb
if collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_climb,0,0)
and holding = 0
and state &lt; 3
and isswim = 0
and not instance_exists(obj_statue)
{
    //Change to climb state
    state = 3

    //Stop movement
    gravity = 0
    speed = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Ninja Mario's Wall Climbing Script
//Executes 60 times per second when Mario meets the requirements for wall climbing.
if global.powerup != cs_ninja
{
    state = 0
    jumpnow = 0
    exit
}
if stompstyle != 0
    stompstyle = 0
if floatnow = 1
    audio_stop_sound(snd_spin)
if keyboard_check(vk_up)
    vspeed -=0.5
else if keyboard_check(vk_down)
    vspeed +=0.5
else
    vspeed = 0
if vspeed &gt; 1
    vspeed = 1
if vspeed &lt; -1
    vspeed = -1
if keyboard_check_pressed(vk_shift)
{
    vspeed = -3.75
    audio_play_sound(snd_jump,0,0)
    jumpnow = 1
    state = 2
    hspeed = -1.5*direct
    direct = -direct
    exit
}
if not collision_rectangle(bbox_right,bbox_top+4,bbox_right+1,bbox_bottom-1,obj_solid,1,0)
and direct = 1
{
    state = 2
    jumpnow = 0
}
else if not collision_rectangle(bbox_left-1,bbox_top+4,bbox_left,bbox_bottom-1,obj_solid,1,0)
and direct = -1
{
    state = 2
    jumpnow = 0
}
if vspeed &lt; 0
if collision_rectangle(bbox_left,bbox_top-1,bbox_right,bbox_top,obj_solid,1,0)
{
    vspeed = 0
    jumpnow = 2
}
if collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_swim,0,0)
{
    isswim = 1
    state = 0
    if collision_point(x,y+33,obj_swim,0,0)
    and not collision_point(x,y,obj_swim,0,0)
    {
        varid = instance_create(x-8,y+17,obj_smoke)
        varid.sprite_index = spr_splash
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Mario's Climbing Script
//Executes 60 times per second when Mario meets the requirements for climbing on obj_climb.
if isduck = 1
    isduck = 0
if stompstyle != 0
    stompstyle = 0
if floatnow = 1
    audio_stop_sound(snd_spin)
if keyboard_check(vk_left)
    hspeed -=0.5
else if keyboard_check(vk_right)
    hspeed +=0.5
else
    hspeed = 0
if keyboard_check(vk_up)
    vspeed -=0.5
else if keyboard_check(vk_down)
    vspeed +=0.5
else
    vspeed = 0
if vspeed &gt; 1
    vspeed = 1
if hspeed &gt; 1
    hspeed = 1
if vspeed &lt; -1
    vspeed = -1
if hspeed &lt; -1
    hspeed = -1
if keyboard_check_pressed(vk_shift)
{
    vspeed = -3.75
    audio_play_sound(snd_jump,0,0)
    jumpnow = 1
    state = 2
}
if not collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_climb,0,0)
{
    state = 0
    jumpnow = 0
}
if keyboard_check(vk_right) and not instance_exists(obj_puller)
    direct = 1
if keyboard_check(vk_left) and not instance_exists(obj_puller)
    direct = -1
if vspeed &lt; 0
and collision_rectangle(bbox_left,bbox_top-1,bbox_right,bbox_top,obj_solid,1,0)
{
    vspeed = 0
    jumpnow = 2
}
if hspeed &gt; 0
and collision_rectangle(bbox_right,bbox_top+4,bbox_right+1,bbox_bottom-1,obj_solid,1,0)
{
    hspeed = 0
    while collision_rectangle(bbox_right,bbox_top+4,bbox_right,bbox_bottom-1,obj_solid,1,0)
    and not collision_point(x,bbox_top+4,obj_solid,0,0)
        x-=1
}
if hspeed &lt; 0
and collision_rectangle(bbox_left-1,bbox_top+4,bbox_left,bbox_bottom-1,obj_solid,1,0)
{
    hspeed = 0
    while collision_rectangle(bbox_left,bbox_top+4,bbox_left,bbox_bottom-1,obj_solid,1,0)
    and not collision_point(x,bbox_top+4,obj_solid,0,0)
        x+=1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Mario's Swimming Script
//Executes 60 times per second when Mario meets the requirements for swimming in obj_swim.
if stompstyle != 0
and global.yoshi &lt; 2
    stompstyle = 0
if floatnow = 1
{
    audio_stop_sound(snd_spin)
    floatnow = 0
}
if (global.powerup != cs_frog and global.powerup != cs_penguin)
or holding &gt; 0
{
    if collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+1,obj_solidtop,0,0)
    or collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+1,obj_slopeparent,1,0)
    {
        if hspeed = 0
            state = 0
        else
            state = 1
    }
    else
        state = 2
    if vspeed &gt; 1.5
        vspeed = 1.5
    if keyboard_check_pressed(vk_shift)
    and not instance_exists(obj_puller)
    and not instance_exists(obj_statue)
    and not instance_exists(obj_slider)
    {
        if keyboard_check(vk_up)
            vspeed = -3.5
        else if keyboard_check(vk_down)
        and isduck = 0
            vspeed = -1
        else
            vspeed = -2.5
        audio_play_sound(snd_swim,0,0)
        jumpnow = 1
    }
    if isduck = 1 and isjump = 0
        canturn = 1
    else
        canturn = 0
    if keyboard_check(vk_right)
    and not instance_exists(obj_puller)
    and not instance_exists(obj_statue)
    and not keyboard_check(vk_left)
    and canturn = 0
    {
        if hspeed &lt; 0
            hspeed += 0.075
        hspeed += 0.06
        direct = 1
    }
    else if keyboard_check(vk_left)
    and not instance_exists(obj_puller)
    and not instance_exists(obj_statue)
    and not keyboard_check(vk_right)
    and canturn = 0
    {
        if hspeed &gt; 0
            hspeed += -0.075
        hspeed += -0.06
        direct = -1
    }
    else
    {
        if hspeed &gt; 0
            hspeed-=0.05
        if hspeed &lt; 0
            hspeed+=0.05
        if hspeed &lt; 0.05
        and hspeed &gt; -0.05
            hspeed = 0
    }
    if state = 2
    {
        if hspeed &gt; 1.5
            hspeed = 1.5
        if hspeed &lt; -1.5
            hspeed = -1.5
        gravity = 0.125
    }
    else
    {
        if hspeed &gt; 0.5
            hspeed = 0.5
        if hspeed &lt; -0.5
            hspeed = -0.5
    }
    if noisy = 1
    {
        noisy = 0
        audio_stop_sound(snd_swim)
    }
}
else
{
    if keyboard_check(vk_up)
    {
        vspeed -=0.5
        swimtype = 1
        if noisy = 0
        {
            noisy = 1
            audio_play_sound(snd_swim,0,1)
        }
    }
    else
    if keyboard_check(vk_down)
    {
        vspeed +=0.5
        swimtype = 2
        if noisy = 0
        {
            noisy = 1
            audio_play_sound(snd_swim,0,1)
        }
    }
    else
        vspeed = 0
    if keyboard_check(vk_left)
    {
        hspeed -=0.5
        swimtype = 0
        direct = -1
        if noisy = 0
        {
            noisy = 1
            audio_play_sound(snd_swim,0,1)
        }
    }
    else if keyboard_check(vk_right)
    {
        hspeed +=0.5
        swimtype = 0
        direct = 1
        if noisy = 0
        {
            noisy = 1
            audio_play_sound(snd_swim,0,1)
        }
    }
    else
        hspeed = 0
    if speed = 0
    and noisy = 1
    {
        noisy = 0
        audio_stop_sound(snd_swim)
    }
    if vspeed &gt; 1.5
        vspeed = 1.5
    if hspeed &gt; 1.5
        hspeed = 1.5
    if vspeed &lt; -1.5
        vspeed = -1.5
    if hspeed &lt; -1.5
        hspeed = -1.5
    if gravity != 0
        gravity = 0
    if state = 2
    or state = 0
        state = 1
    isduck = 0
}
isrun = 0
if not collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_swim,0,0)
{
    isswim = 0
    jumpnow = 0
    beefly = 0
    if collision_point(x,y+33,obj_swim,1,1)
    {
        varid = instance_create(x-8,y+17,obj_smoke)
        varid.sprite_index = spr_splash
        varid.depth = -6
        if keyboard_check(vk_shift)
        {
            vspeed = -3.85
            jumpnow = 1
        }
    }
    if (global.powerup = cs_frog or global.powerup = cs_penguin)
    and noisy = 1
    {
        noisy = 0
        audio_stop_sound(snd_swim)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mario's default step script

//Figure out Mario's state
if (collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+1,obj_solidtop,0,0)
or collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+1,obj_slopeparent,0,0))
and vspeed &gt;= 0
{

    //Figure out if Mario is standing or walking
    if hspeed = 0
        state = 0
    else
        state = 1

}

//Mario is jumping if there is no ground below him
else
    state = 2

//Check if Mario is standing on a slippery surface
if collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+1,obj_slippery,0,0)
    isslip = 1
else
    isslip = 0

//Prevent Mario from falling down too fast
if vspeed &gt; 3
    vspeed = 3

//Figure out what Mario's max speed should be

//Frog Mario can not run
if global.powerup = cs_frog
and global.yoshi = 0
{
    varrun = 0
    hspeedmax = 1.5
}

//Bee Mario is slow when he is flying
else if global.powerup = cs_bee
and isfloating = 1
{
    varrun = 0
    hspeedmax = 1
}

//If the run key is being held, go faster
else if keyboard_check(vk_control)
{
    varrun = 1
    hspeedmax = 3
}

//Otherwise, move slower
else
{
    varrun = 0
    hspeedmax = 1.5
}

//Handles Mario's jumping
if keyboard_check_pressed(vk_shift)

//Make sure that Mario can jump
and ((jumpnow = 0
and vspeed &lt;= 0
and not instance_exists(obj_puller)
and not instance_exists(obj_statue)
and not instance_exists(obj_slider)
and not instance_exists(obj_wallrunner)
and isjump = 0)

//Allow Mario to jump off of Yoshi or a shoe while in midair
or (keyboard_check(vk_up)
and isduck = 0
and global.yoshi &gt; 0))
{

    //Jump higher if Mario is running
    if isrun = 1
        vspeed = -4.5

    //If Mario is not running
    else
    {

        //Jump high if you are frog Mario, and you are not riding anything
        if global.powerup = cs_frog
        and global.yoshi = 0
            vspeed = -4.5

        //Jump lower if you are not running
        else
        {

            //Jump even lower if you are walking super slowly
            if round(hspeed/2) = 0
                vspeed = -3.85

            //Jump slightly higher if you are walking
            else
                vspeed = -4.05

        }
    }

    //Make Mario spin jump
    if keyboard_check(vk_up)
    and isduck = 0
    and (holding = 0 or global.yoshi &gt; 0)
    {

        //Set spin jump variable
        stompstyle = 1

        //Play spin jump sound
        audio_play_sound(snd_spin,0,0)

        //Create spin jump projectiles
        alarm[7] = 10

        //Get off of Yoshi if he is on one
        if global.yoshi = 1
            obj_yoshi.alarm[1] = 1

        //Get off of a shoe if he is on one
        else if global.yoshi = 2
            obj_kuriboshoe.alarm[1] = 1

    }

    //Play the jump sound if he is not spin jumping
    else
        audio_play_sound(snd_jump,0,0)

    //Enable variable jumping
    jumpnow = 1

}

//Check if Mario should still be variable jumping
if keyboard_check_released(vk_shift)
and jumpnow = 1
    jumpnow = 2


if isduck = 1 and isjump = 0
{
    if hspeed &gt; 0
        hspeed-=0.05
    if hspeed &lt; 0
        hspeed+=0.05
    if hspeed &lt; 0.05
    and hspeed &gt; -0.05
        hspeed = 0
    canturn = 1
}
else
    canturn = 0
if canturn = 0
{
    if keyboard_check(vk_right)
    and not instance_exists(obj_puller)
    and not instance_exists(obj_statue)
    and not keyboard_check(vk_left)
    {
        if hspeed &lt; hspeedmax
        {
            if isslip = 1
                hspeed += 0.04
            else
            {
                if hspeed &lt; 0
                    hspeed += 0.075
                hspeed += 0.06
            }
        }
        if isjump = 0
        or not (global.powerup = cs_ninja and global.yoshi = 0)
            direct = 1
    }
    else if keyboard_check(vk_left)
    and not instance_exists(obj_puller)
    and not instance_exists(obj_statue)
    and not keyboard_check(vk_right)
    {
        if hspeed &gt; hspeedmax*-1
        {
            if isslip = 1
                hspeed -= 0.04
            else
            {
                if hspeed &gt; 0
                    hspeed += -0.075
                hspeed += -0.06
            }
        }
        if isjump = 0
        or not (global.powerup = cs_ninja and global.yoshi = 0)
            direct = -1
    }
    else if isjump = 0
    {
        if isslip = 0
        {
            if hspeed &gt; 0
                hspeed-=0.05
            else if hspeed &lt; 0
                hspeed+=0.05
            if hspeed &lt; 0.05
            and hspeed &gt; -0.05
                hspeed = 0
        }
        else
        {
            if hspeed &gt; 0
                hspeed-=0.025
            else if hspeed &lt; 0
                hspeed+=0.025
            if hspeed &lt; 0.025
            and hspeed &gt; -0.025
                hspeed = 0
        }
    }
    if isjump = 0
        if hspeed &gt; hspeedmax
        or hspeed &lt; hspeedmax*-1
        {
            if hspeed &gt; 0
                hspeed-=0.025
            else if hspeed &lt; 0
                hspeed+=0.025
            if hspeed &lt; 0.025
            and hspeed &gt; -0.025
                hspeed = 0
        }
}
if state = 2
{
    if vspeed &gt; -1
    or jumpnow != 1
    {
        gravity = 0.3
        if jumpnow = 1
            jumpnow = 2
    }
    else
        gravity = 0.1
}
if hspeed &gt; 2.8
or hspeed &lt; -2.8
    isrun = 1
else
    isrun = 0
if stompstyle != 0
    isrun = 0
if collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_swim,0,0)
{
    isswim = 1
    if vspeed &gt; 0
        vspeed = 0
    if collision_point(x,y+33,obj_swim,0,0)
    and not collision_point(x,y,obj_swim,0,0)
    {
        varid = instance_create(x-8,y+17,obj_smoke)
        varid.sprite_index = spr_splash
        varid.depth = -6
    }
    isfloating = 0
}
if stompstyle != 0
and isjump = 0
and jumpnow = 0
    stompstyle = 0
if stompstyle != 0
and holding != 0
    stompstyle = 0
if (global.powerup = cs_carrot or (global.powerup = cs_bee and beefly &lt; 128))
and isjump = 1
and stompstyle = 0
and isduck = 0
and global.yoshi = 0
and keyboard_check(vk_shift)
{
    if vspeed &gt; 0
    {
        vspeed = 0.5
        isfloating = 1
        if global.powerup = cs_bee
        and not collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_top,obj_solid,1,0)
        {
            vspeed = -1.5
            beefly += 8
        }
    }
    else
    {
        if global.powerup = cs_bee
        and isfloating = 1
        {
            vspeed = -1.5
            beefly += 1
            if hspeed &gt; 1
                hspeed -= 0.1
            if hspeed &lt; -1
                hspeed += 0.1
        }
        else
            isfloating = 0
    }
}
else
    isfloating = 0
if isfloating = 1
and floatnow = 0
{
    floatnow = 1
    audio_play_sound(snd_spin,0,1)
}
else if isfloating = 0
and floatnow = 1
{
    audio_stop_sound(snd_spin)
    floatnow = 0
}
if global.powerup = cs_ninja
and vspeed &gt; 0
and isjump = 1
and isduck = 0
and holding = 0
{
    if keyboard_check(vk_right)
    and collision_rectangle(bbox_right,bbox_top+4,bbox_right+1,bbox_bottom-1,obj_solid,1,0)
    and direct = 1
    {
        state = 4
        vspeed = 0
        gravity = 0
    }
    if keyboard_check(vk_left)
    and collision_rectangle(bbox_left-1,bbox_top+4,bbox_left,bbox_bottom-1,obj_solid,1,0)
    and direct = -1
    {
        state = 4
        vspeed = 0
        gravity = 0
    }
}
if global.yoshi = 2
    stompstyle = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Mario bounce off an enemy
if not instance_exists(obj_slider)
{

    //Enable variable jumping if shift is held down
    if keyboard_check(vk_shift)
        jumpnow = 1
    else
        jumpnow = 2
    vspeed = -4
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hurt Mario

//If Mario is not invincible
if invincible = 0
{
 
    //Make Mario invincible
    invincible = 1

    //Make Mario not invincible after a cooldown
    alarm[3] = 120

    //Make Mario's alpha blink
    alarm[1] = 1

    //If Mario is not riding anything
    if global.yoshi = 0
    {

        //If Mario is small
        if global.powerup = cs_small
        {
        
            //Kill Mario
            instance_create(x,y,obj_deadmario)
            instance_destroy()
        
        }
        
        //If Mario is not small
        else
        {
        
            //Make Mario big if he has a powerup, and small otherwise
            if global.powerup = cs_big
                global.powerup = cs_small
            else
                global.powerup = cs_big
        
            //Play hurt sounds
            audio_play_sound(snd_warp,0,0)
            audio_play_sound(snd_ow,0,0)
        
        }
    }

    //If Mario is riding something
    else
    {

        //If Mario is on a Yoshi
        if global.yoshi = 1
        {
        
            //Create runaway Yoshi
            instance_create(obj_yoshi.x,obj_yoshi.y,obj_yoshi_runaway)
        
            //Destroy Yoshi
            with obj_yoshi instance_destroy()
        
        }

        //If Mario is on a shoe
        else if global.yoshi = 2
        {
        
            //No more shoe kill ability
            stompstyle = 0
        
            //Play hurt sounds
            audio_play_sound(snd_magic,0,0)
            audio_play_sound(snd_ow,0,0)
        
            //Destroy the shoe
            instance_create(x,y+16,obj_statuesmoke)
            with obj_kuriboshoe instance_destroy()
        
        }

        //Stop riding
        global.yoshi = 0

        //Reset visibility
        visible = 1

    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Execute destroy event
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not instance_exists(obj_camera)
    instance_create(x,y,obj_camera)
if global.postchange = 1
{
    if global.posttype = 0
    {
        x = global.postx
        y = global.posty
    }
    if global.posttype = 1
    {
        instance_create(global.postx,global.posty,obj_warpmario)
        instance_destroy()
    }
    global.postchange = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draws Mario

//Make Mario flash
if isflashing = 1
    shader_set(sha_invert)

//Draw Mario
draw_sprite_ext(sprite_index,image_index,round(x),y,direct,1,0,c_white,image_alpha)

//Reset flashing
if isflashing = 1
    shader_reset()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles sliding down slopes and shell/penguin Mario sliding
if holding = 0
and global.yoshi = 0
and isswim = 0
{
    //If shell/penguin Mario is walking
    if (global.powerup = cs_shell or global.powerup = cs_penguin)
    and state = 1
        instance_create(x,y,obj_inshell)

    //If Mario is standing/walking, and the above didn't happen
    else if collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+3,obj_slopeparent,1,0)
    and not collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+3,obj_solidtop,0,0)
    and state &lt; 2
        instance_create(x,y,obj_slider)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles powerup specific projectiles, tail spinning, and statue morphing
if holding = 0
and state != 3
and not collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_parpull,1,0)
and not collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom+1,obj_powblock,1,0)
and not collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom+1,obj_parenemy,1,0)
and not collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_holdparent,1,0)
and stompstyle = 0
and obj_camera.docamera = 0
{
    //Fire Ball
    if global.powerup = cs_fire
    and instance_number(obj_fireball) &lt; 2
    and isduck = 0
    {
        firing = 9
        instance_create(x,y+16,obj_fireball)
    }

    //Hammer
    else if global.powerup = cs_hammer
    and instance_number(obj_hammer) &lt; 2
    and isduck = 0
    {
        firing = 9
        instance_create(x,y+16,obj_hammer)
    }

    //Bomb
    else if global.powerup = cs_bomb
    and instance_number(obj_minibomb) &lt; 1
    and isduck = 0
    {
        firing = 9
        instance_create(x,y+16,obj_minibomb)
    }

    //Ice Ball
    else if (global.powerup = cs_ice or (global.powerup = cs_penguin and isswim = 0))
    and instance_number(obj_iceball) &lt; 1
    and isduck = 0
    {
        firing = 9
        instance_create(x,y+16,obj_iceball)
    }

    //Super Ball
    else if global.powerup = cs_super
    and instance_number(obj_superball) &lt; 2
    and isduck = 0
    {
        firing = 9
        instance_create(x,y+16,obj_superball)
    }

    //Shuriken
    else if global.powerup = cs_ninja
    and instance_number(obj_shuriken) &lt; 2
    and isduck = 0
    and state != 4
    {
        firing = 9
        instance_create(x,y+20,obj_shuriken)
    }

    //Tanooki Statue
    else if global.powerup = cs_tanooki
    and not instance_exists(obj_spinner)
    and not instance_exists(obj_slider)
    and global.yoshi = 0
    and keyboard_check(vk_down)
        instance_create(x,y,obj_statue)

    //Tail Spin
    else if (global.powerup = cs_leaf or global.powerup = cs_tanooki)
    and not instance_exists(obj_spinner)
    and not instance_exists(obj_statue)
    and isduck = 0
    and global.yoshi = 0
        instance_create(x,y,obj_spinner)
}

//Smack the net to kill Net Koopas
if place_meeting(x,y,obj_climb_net)
and state = 3
and kk = 0
{
    kk = 1
    audio_play_sound(snd_bump,0,0)
    alarm[4] = 2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles leaf and tanooki Mario's flying
if (global.powerup = cs_leaf or global.powerup = cs_tanooki)
and state = 2
and isswim = 0
and isduck = 0
and not instance_exists(obj_statue)
and stompstyle = 0
and global.yoshi = 0
and not collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_quicksand,0,0)
{
    //Fly if the P-meter is flashing, float otherwise
    if obj_camera.pmeter &gt; 5
        vspeed = -4
    else
        vspeed = -0.5

    //Wiggle animation
    wiggle = 16

    //Sound effect
    audio_play_sound(snd_spin,0,0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,-16</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
