<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_door</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A door

//Do not animate
image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///What happens after Mario enters the door

//Check for a warp room
mywarp = instance_place(x,y,obj_warproom)

//If a warp room object exists
if mywarp
{

    //With the warp room object
    with mywarp
    {

        //If the position needs to be changed in the next room
        if postchange != -1
        {

            //Remember what needs to be created at what coordinates
            global.postchange = postchange
            global.postx = postx+8
            global.posty = posty

        }

        //Go to the set room
        room_goto(myroom)

    }

}

//If no warp room object is there
else
{

    //Check for a position change
    mywarp = instance_place(x,y,obj_postchange)

    //If the position change exists, create Mario at that position
    if mywarp
        instance_create(mywarp.postx+8,mywarp.posty,obj_mario)

    //Otherwise, have Mario come out the same door
    else
        instance_create(x+8,y-16,obj_mario)

    //Remember if something is being held
    obj_mario.holding = obj_doormario.holding

    //Notify the level manager
    with obj_levelmanager
    {
        barrier = 1
        alarm[6] = 2
    }

    //Get rid of door Mario
    with obj_doormario instance_destroy()

    //Fade the screen
    with obj_persistent event_user(0)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Close the door
image_speed = 0
image_index = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the door

//Draw the inside of the door when needed
if image_index &lt; 4
    draw_sprite(spr_door_inside,0,x,y)

//Draw the door on top
draw_sprite(sprite_index,image_index,x,y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Let Mario in the door

//If Mario is on the door, not jumping, and visible
if place_meeting(x,y,obj_mario)
and obj_mario.state != 2
and visible = 1
{

    //Play the door sound
    audio_play_sound(snd_door,0,0)

    //Animate
    image_speed = 0.15

    //Create a door Mario
    instance_create(x+8,y-16,obj_doormario)

    //Get rid of the real Mario
    with obj_mario instance_destroy()

    //Mario enters the door after 55 frames
    alarm[0] = 55

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
