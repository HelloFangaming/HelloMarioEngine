<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chargingchuck_paused</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>spr_enemymaskbig</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A football player who hates Mario for never playing football

//How vulnerable is this enemy to various items?
hardness = 0

//How vulnerable is this enemy to Mario?
stomp = 5

//Facing direction
direct = -1

//Start charging towards Mario
alarm[10] = 60

//Animate
image_speed = 0.1

//Health
hitpoints = 3

//State variable
ready = 0

//Play running sounds
alarm[1] = 7
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Charge after Mario

//If Mario exists, and the chuck is not hurting
if ready = 0
and instance_exists(obj_mario)
{

    //Face Mario
    if obj_mario.x &lt; x
        direct = -1
    else
        direct = 1

    //Charge
    hspeed = direct

    //Run sprite
    sprite_index = spr_chargingchuck

    //Faster animation speed
    image_speed = 0.15

    //Pause to take a break
    alarm[0] = 200

}

//Otherwise, wait
else
    alarm[10] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play running sounds
if sprite_index = spr_chargingchuck
    audio_play_sound(snd_bump,0,0)
alarm[1] = 7
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Take a breather and look around

//If he is jumping, wait
if sprite_index = spr_chargingchuck_jump
    alarm[0] = 1

//Otherwise
else
{

    //Reset state
    ready = 0

    //Reset hardness
    hardness = 0

    //Start running later
    alarm[10] = 60

    //Slower animation speed
    image_speed = 0.1

    //Stop moving
    hspeed = 0

    //Paused sprite
    sprite_index = spr_chargingchuck_paused

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chuck logic

//If not hurting and is walking
if ready = 0
and sprite_index = spr_chargingchuck
{

    //Jump when a wall is reached
    if (hspeed &gt; 0 and collision_rectangle(bbox_right+hspeed*2,bbox_top,bbox_right+hspeed*2,bbox_bottom-1,obj_solid,0,0))
    or (hspeed &lt; 0 and collision_rectangle(bbox_left+hspeed*2,bbox_top,bbox_left+hspeed*2,bbox_bottom-1,obj_solid,0,0))
    {
        sprite_index = spr_chargingchuck_jump
        vspeed = -5
        y--
    }

}

//Move away from walls
if hspeed &gt; 0
and collision_rectangle(bbox_right+hspeed,bbox_top,bbox_right+hspeed,bbox_bottom,obj_solid,0,0)
    x--
if hspeed &lt; 0
and collision_rectangle(bbox_left+hspeed,bbox_top,bbox_left+hspeed,bbox_bottom,obj_solid,0,0)
    x++

//Default floor collisions
event_user(4)

//Change sprite when landing from a jump
if gravity = 0
and sprite_index = spr_chargingchuck_jump
    sprite_index = spr_chargingchuck

//Lose all health and die if an insta-kill item is touched
if place_meeting(x,y,obj_powkiller)
or place_meeting(x,y,obj_invincibility)
{
    hitpoints = 0
    event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solidtop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Floor collision
if y &lt; other.y-27 and vspeed &gt; 0
{
    y = other.y-32
    vspeed = 0
    gravity = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chuck stomping

//If the chuck is hurting, play sounds only
if ready = 1
    audio_play_sound(snd_stomp,0,0)

//Otherwise, hurt the chuck
else
{
    scr_musicalscale(obj_mario.id,1)
    event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chuck hurting

//Play hurt sound
audio_play_sound(snd_hurt,0,0)

//Decrement health
hitpoints--

//Use hurt sprite
sprite_index = spr_chargingchuck_hurt

//If he has health left
if hitpoints &gt; 0
{

    //Change state
    ready = 1

    //Become hard
    hardness = 99

    //Pause afterwards
    alarm[0] = 60

    //Stop moving
    hspeed = 0

    //Animate
    image_speed = 0.15

}

//Otherwise, die
else
    event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Finish hurt animation
if sprite_index = spr_chargingchuck_hurt
{
    image_speed = 0
    image_index = 5
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Charging Chuck
draw_sprite_ext(sprite_index,image_index,round(x),y,direct,1,0,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
