<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_phanto</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemyparent</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///This phanto will give chase if the nearest key to it is moved...

//How vulnerable is this enemy to various items?
hardness = 100

//How vulnerable is this enemy to Mario?
stomp = -1

//The key this phanto will track
if instance_exists(obj_key)
{
    mykey = instance_nearest(x,y,obj_key)
    oldx = mykey.x
    oldy = mykey.y
}

//Destroy if there is no keys
else
    instance_destroy()

//Chase mode
chasemode = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Phanto logic

//If it is invisible
if visible = 0
{

    //If the key is taken, chase the key
    if instance_exists(mykey)
    {
        if mykey.held = 1
        {
            chasemode = 0
            direction = point_direction(x,y,mykey.x,mykey.y)
            event_user(15)
        }
    }

    //Otherwise
    else
    {

        //If the key was eaten, chase Yoshi
        if instance_exists(obj_yoshi)
        and obj_yoshi.inmouth = obj_key
        {
            chasemode = 1
            direction = point_direction(x,y,obj_yoshi.x,obj_yoshi.y)
            event_user(15)
        }

        //Otherwise, make a new key
        else if not instance_exists(obj_tongue)
            mykey = instance_create(oldx,oldy,obj_key)

    }

}

//If it is visible
else
{

    //Normal key chase
    if chasemode = 0
    {

        //If it touches the key, return everything back to the way it was
        if position_meeting(x+8,y+8,mykey)
        {
            mykey.x = oldx
            mykey.y = oldy
            event_user(14)
            if mykey.held = 1
            {
                mykey.held = 0
                obj_mario.holding = 0
            }
        }

        //If the key still exists, give chase
        else if instance_exists(mykey)
            turn_towards_direction(point_direction(x,y,mykey.x,mykey.y),8)

        //Chase Yoshi if it gets eaten
        else if instance_exists(obj_yoshi)
        and obj_yoshi.inmouth = obj_key
            chasemode = 1

        //Otherwise, make a new one
        else if not instance_exists(obj_tongue)
        {
            mykey = instance_create(oldx,oldy,obj_key)
            event_user(14)
        }

    }

    //Yoshi key chase
    else
    {

        //If Yoshi still has the key, chase Yoshi
        if instance_exists(obj_yoshi)
        and obj_yoshi.inmouth = obj_key
            turn_towards_direction(point_direction(x,y,obj_yoshi.x,obj_yoshi.y),8)

        //If the key was spit out, chase the key
        else
        {
            mykey = instance_nearest(obj_levelmanager.x,obj_levelmanager.y,obj_key)
            chasemode = 0
        }

    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Begin chase
visible = 1
speed = 1
stomp = 2
instance_create(x,y,obj_smoke)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End chase
visible = 0
speed = 0
stomp = -1
instance_create(x,y,obj_smoke)

//Reset position
x = xstart
y = ystart
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
