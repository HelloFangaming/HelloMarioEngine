<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles music, the timer, Mario Start!, checkpoints, and position changing

/*
**  This item uses creation code!
**
**  leveltime = The time limit in seconds (Optional)
**
**  levelmusic = The level music (Any sound resource you load in)
**
*/

//Default Values:
leveltime = 0
levelmusic = 0

//Begin playing the music if you did not carry over a star/switch effect from a previous room
if global.pswitch = 0
and global.star = 0
    alarm[0] = 2

//Create the camera object
instance_create(0,0,obj_camera)

//Make the view follow the camera
view_object[0] = obj_camera
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kill Mario

//If Mario exists
if instance_exists(obj_mario)
{

    //Kill Mario
    instance_create(obj_mario.x,obj_mario.y,obj_deadmario)
    with obj_mario instance_destroy()

}

//Otherwise, delay the inevitable
else
    alarm[4] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play the hurry up sound

//Delay the sound if a star/switch is in effect
if audio_is_playing(snd_starman)
or audio_is_playing(snd_switchsong)
    alarm[3] = 60
else
{

    //Hurry up!
    audio_play_sound(snd_hurryup,1,0)

    //Stop the music
    alarm[1] = 1

    //Play the music after the hurry up sound is done
    alarm[0] = 120

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Decrement the time variable

//If there is time left
if global.time &gt; 0
{

    //Decrement
    global.time--

    //Decrement the time again after a second
    alarm[2] = 60

    //Play the hurry up sound at 100 seconds left
    if global.time = 101
        alarm[3] = 60

    //Kill Mario at 0 seconds
    else if global.time = 1
        alarm[4] = 60

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop the music
audio_stop_sound(levelmusic)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Loop the music
if not audio_is_playing(levelmusic)
and not instance_exists(obj_deadmario)
and not instance_exists(obj_goalmario)
    audio_play_sound(levelmusic,99,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy all player objects
with obj_mario instance_destroy()
with obj_warpmario instance_destroy()
with obj_jumpspawn instance_destroy()
with obj_vinespawn instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Mario Start!, checkpoints, and position changing

//If the music is not the same as the music used in the last room
if global.levelmusic != levelmusic
{

    //Stop the old music
    audio_stop_sound(global.levelmusic)

    //Set the new music
    global.levelmusic = levelmusic

}

//If the time is set to something, and was not set in a previous room, set it
if leveltime &gt; 0
and global.time = 0
    global.time = leveltime

//If the timer was set, begin ticking
if global.time &gt; 0
    alarm[2] = 60

//If Mario just started the level
if global.mariostart = 0
{

    //The level has started
    global.mariostart = 1

    //Handles checkpoints
    if global.midwaypoint = 1
    and instance_exists(obj_midwayspot)
    {

        //Destroy all player objects
        event_user(0)

        //Create a new Mario at the desired location
        instance_create(obj_midwayspot.x,obj_midwayspot.y,obj_mario)

    }

    //Create the Mario Start! effect
    instance_create(0,0,obj_mariostart)

}

//If position changing is enabled
if global.postchange != -1
{

    //Destroy all player objects
    event_user(0)

    //Create the desired object at the desired location
    if global.postchange = 0
        instance_create(global.postx,global.posty,obj_mario)
    else if global.postchange = 1
        instance_create(global.postx,global.posty,obj_warpmario)
    else if global.postchange = 2
        instance_create(global.postx,global.posty,obj_jumpspawn)
    else if global.postchange = 3
        instance_create(global.postx,global.posty,obj_vinespawn)

    //Disable position changing
    global.postchange = -1

}

//Create a Yoshi or shoe if Mario had one in a previous room
if global.yoshi = 1
    instance_create(0,0,obj_yoshi)
else if global.yoshi = 2
    instance_create(0,0,obj_kuriboshoe)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
