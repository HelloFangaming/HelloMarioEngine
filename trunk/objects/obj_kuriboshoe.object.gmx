<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_kuriboshoe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A shoe Mario can ride

//On shoe
global.yoshi = 2

//Do not animate
image_speed = 0

//Offset values
offset = 0
offsetnext = 0

//Manage offset values
alarm[0] = 2

//Mario's previous state
stateprev = 0

//Is the jugemu shoe flying?
flying = 0

//Use correct shoe sprite
if global.ycolor = 1
    sprite_index = spr_baburushoe
else if global.ycolor = 2
    sprite_index = spr_dossunshoe
else if global.ycolor = 3
    sprite_index = spr_jugemushoe
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy shoe

//Not on shoe
global.yoshi = 0

//Reset Mario's holding variable
with obj_mario holding = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make flying noises for jugemu shoe
if flying = 1
{
    audio_play_sound(snd_lick,0,0)
    alarm[1] = 15
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage offset values

//If Mario is walking
if instance_exists(obj_mario)
and obj_mario.state = 1
{

    //Offset values
    switch offsetnext
    {
        case 0: offset = 1 break
        case 1: offset = 2 break
        case 2: offset = 3 break
        case 3: offset = 4 break
        case 4: offset = 5 break
        case 5: offset = 4 break
        case 6: offset = 3 break
        case 7: offset = 2 break
        case 8: offset = 1 break
        case 9: offset = 0 break
    }

    //Increment next offset
    offsetnext++

    //Cap offset value
    if offsetnext = 10
        offsetnext = 0

}

//Otherwise, no offset
else
{
    offsetnext = 0
    offset = 0
}

//Keep changing offset values
alarm[0] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shoe logic

//If Mario exists
if instance_exists(obj_mario)
{

    //Snap to position
    x = obj_mario.x
    y = obj_mario.y+16

    //Force him to be invisible
    obj_mario.visible = 0

    //Force him to hold shoe
    obj_mario.holding = 3

    //Force him to spin jump
    obj_mario.stompstyle = 1

    //If Mario is standing, use first image index
    if obj_mario.state = 0
        image_index = 0

    //If Mario is walking or jugemu shoe is flying, animate
    else if obj_mario.state = 1
    or (global.ycolor = 3 and flying = 1)
        image_speed = 0.15

    //Otherwise, use second image index
    else
        image_index = 1

    //If on a dossun shoe
    if global.ycolor = 2
    {

        //If Mario lands after a jump, stomp
        if stateprev = 2
        and obj_mario.state != 2
            instance_create(x,y,obj_stomp)

        //Remember last state
        stateprev = obj_mario.state

    }

    //If on a jugemu shoe
    else if global.ycolor = 3
    {

        //If shift is held outside water
        if keyboard_check(vk_shift)
        and obj_mario.isswim = 0
        {

            //If not flying and moving down, start flying
            if flying = 0
            and obj_mario.vspeed &gt; 0
            {
                flying = 1
                alarm[1] = 1
            }

            //When flying, move up if there is no ceiling above Mario
            if flying = 1
            {
                with obj_mario
                {
                    if not collision_rectangle(bbox_left,bbox_top-3,bbox_right,bbox_top,obj_solid,1,0)
                        vspeed = -2
                }
            }

        }

        //Otherwise, stop flying
        else
            flying = 0

    }

    //Depth
    depth = -5

}

//If warp Mario exists
else if instance_exists(obj_warpmario)
{

    //Snap to position
    x = obj_warpmario.x
    y = obj_warpmario.y+16

    //Force him to be invisible
    obj_warpmario.visible = 0

    //Stay invisible in pipes
    if obj_warpmario.speed = 3
        visible = 0
    else
        visible = 1

    //Depth
    depth = 11

}

//If warp note block exists
else if instance_exists(obj_warpnoteblock)
{

    //Snap to position
    x = obj_warpnoteblock.x
    y = obj_warpnoteblock.y+16

    //Force him to be invisible
    obj_warpnoteblock.visible = 0

    //Depth
    depth = -5

}

//If jump spawn exists
else if instance_exists(obj_jumpspawn)
{

    //Snap to position
    x = obj_jumpspawn.x
    y = obj_jumpspawn.y+16

    //Force him to be invisible
    obj_jumpspawn.visible = 0

    //Depth
    depth = -5

}

//If Mario beats the level or dies, destroy
else if instance_exists(obj_goalmario)
or instance_exists(obj_deadmario)
{
    audio_play_sound(snd_magic,0,0)
    instance_create(x,y,obj_statuesmoke)
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get off the shoe
with instance_create(x-8,y,obj_getshoe)
{
    if global.ycolor = 1
        sprite_index = spr_baburushoe
    else if global.ycolor = 2
        sprite_index = spr_dossunshoe
    else if global.ycolor = 3
        sprite_index = spr_jugemushoe
    if instance_exists(obj_mario)
        direct = obj_mario.direct
}

//Make Mario visible and spin jumping
with obj_mario
{
    visible = 1
    stompstyle = 1
}

//Destroy
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Kuribo Shoe

//Make sure to offset small Mario sprites
if global.powerup = cs_small
    yoffset = 5
else
    yoffset = 0

//If Mario exists
if instance_exists(obj_mario)
{

    //Make Mario flash
    if obj_mario.isflashing = 1
        shader_set(sha_invert)

    //Draw Mario
    draw_sprite_ext(scr_marioslide(),0,round(x)-obj_mario.direct,y-19-offset-yoffset,obj_mario.direct,1,0,c_white,obj_mario.image_alpha)

    //Draw shoe
    draw_sprite_ext(sprite_index,image_index,round(x)-8*obj_mario.direct,y-offset,obj_mario.direct,1,0,c_white,1)

    //Reset flashing
    if obj_mario.isflashing = 1
        shader_reset()

}
else if instance_exists(obj_warpmario)
{
    //Make Mario flash
    if obj_warpmario.isflashing = 1
        shader_set(sha_invert)

    //Draw Mario
    draw_sprite_ext(scr_marioslide(),0,round(x)-obj_warpmario.direct,y-19-yoffset,obj_warpmario.direct,1,0,c_white,1)

    //Draw shoe
    draw_sprite_ext(sprite_index,0,round(x)-8*obj_warpmario.direct,y,obj_warpmario.direct,1,0,c_white,1)

    //Reset flashing
    if obj_warpmario.isflashing = 1
        shader_reset()

}
else if instance_exists(obj_warpnoteblock)
{

    //Draw Mario
    draw_sprite_ext(scr_marioslide(),0,round(x)-obj_warpnoteblock.direct,y-19-yoffset,obj_warpnoteblock.direct,1,0,c_white,1)

    //Draw shoe
    draw_sprite_ext(sprite_index,image_index,round(x)-8*obj_warpnoteblock.direct,y,obj_warpnoteblock.direct,1,0,c_white,1)

}
else if instance_exists(obj_jumpspawn)
{

    //Draw Mario
    draw_sprite(scr_marioslide(),0,x-1,y-19-yoffset)

    //Draw shoe
    draw_sprite(sprite_index,image_index,round(x)-8,y)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
