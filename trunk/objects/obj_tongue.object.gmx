<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tongue</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Yoshi's tongue

//Did Yoshi eat something?
hunger = 0

//What the food looks like
foodsprite = noone
foodindex = 0

//Eaten powerup
powerup = noone

//State variable
ready = 0

//Tongue offset values
t2 = 0
t3 = 0
t4 = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tongue logic

//If Mario and Yoshi exist
if instance_exists(obj_mario)
and instance_exists(obj_yoshi)
{

    //Where the tongue should be drawn
    tongue1x = obj_yoshi.x+17*obj_mario.direct
    tongue2x = t2*obj_mario.direct+tongue1x
    tongue3x = t3*obj_mario.direct+tongue1x

    //Actual tongue location
    x = t4*obj_mario.direct+tongue1x
    y = obj_yoshi.y+20

    //If Yoshi is moving his tongue out
    if ready = 0
    {

        //Increment tongue offset values
        if t2 != 8
            t2+=2
        if t3 != 16
            t3+=2
        if t4 != 24
            t4+=2

        //If the tongue is all the way out, pull it back in
        else
            ready = 1
    }

    //If Yoshi is pulling back his tongue
    else if ready = 1
    {

        //Decrement tongue offset values
        if t2 != 0
            t2-=2
        if t3 != 0
            t3-=2
        if t4 != 0
            t4-=2

        //If the tongue is all the way in
        else
        {

            //Close Yoshi's mouth
            obj_yoshi.alarm[1] = 5

            //If something was eaten
            if hunger = 1
            {

                //If a powerup was eaten, place it on top of Mario
                if powerup != noone
                    instance_create(obj_yoshi.x,obj_yoshi.y+16,powerup)

                //If Yoshi's mouth is not full, swallow
                else if obj_yoshi.inmouth = noone
                    audio_play_sound(snd_eat,0,0)

            }

            //Destroy
            instance_destroy()

        }

    }

}

//Otherwise, stop licking and destroy
else
{
    with obj_yoshi licking = 0
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_powerupparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Eat powerups
if hunger = 0
{

    //Item eaten
    hunger = 1

    //Move tongue back
    ready = 1

    //Food sprite
    foodsprite = other.sprite_index

    //Remember powerup eaten
    powerup = other.object_index

    //Destroy food
    with other instance_destroy()

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_holdparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Eat held items
if hunger = 0
and other.object_index != obj_spring_timed
and other.object_index != obj_spring_blue
{

    //Item eaten
    hunger = 1

    //Move tongue back
    ready = 1

    //Put it in Yoshi's mouth
    obj_yoshi.inmouth = other.object_index

    //Remember its sprite
    obj_yoshi.mouthsprite = other.sprite_index

    //Food sprite
    foodsprite = other.sprite_index

    //Destroy food
    with other instance_destroy()

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Eat enemies
if hunger = 0
and other.hardness &lt; 2
{

    //Item eaten
    hunger = 1

    //Move tongue back
    ready = 1

    //Put fire in red Yoshi's mouth
    if global.ycolor = 1
        obj_yoshi.inmouth = obj_yoshifire

    //Food sprite
    foodsprite = other.sprite_index

    //Food image index
    foodindex = other.image_index

    //Make sure brick goombas look right
    if foodsprite = spr_kuribohead
        foodsprite = spr_kuriboshoe

    //Destroy food
    with other instance_destroy()

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bluebrick">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Eat bricks
if hunger = 0
{

    //Item eaten
    hunger = 1

    //Move tongue back
    ready = 1

    //Put it in Yoshi's mouth
    obj_yoshi.inmouth = obj_thrownbrick

    //Remember its sprite
    obj_yoshi.mouthsprite = other.throwsprite

    //Food sprite
    foodsprite = other.throwsprite

    //Destroy food
    with other instance_destroy()

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Tongue
draw_sprite_ext(spr_tongue,1,tongue1x,y,obj_mario.direct,1,0,c_white,1)
draw_sprite_ext(spr_tongue,1,tongue2x,y,obj_mario.direct,1,0,c_white,1)
draw_sprite_ext(spr_tongue,1,tongue3x,y,obj_mario.direct,1,0,c_white,1)
draw_sprite_ext(spr_tongue,0,x,y,obj_mario.direct,1,0,c_white,1)

//Draw eaten item
if hunger = 1
    draw_sprite(foodsprite,foodindex,round(x-8+(sprite_get_width(foodsprite)/2)*image_xscale)-sprite_width,y-4)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>4,4</point>
  </PhysicsShapePoints>
</object>
