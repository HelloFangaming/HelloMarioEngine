<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//The engine's persistent object.
//Don't delete this unless you know what you are doing.
done = 0
mode = 0
back = -1
global.carrieditem = 0
global.carriedsprite = 0
global.shallihold = 0
global.levelmusic = snd_gameover
global.acecoins = ds_map_create()
global.worldmap = ds_map_create()
global.messagefont = font_add_sprite(spr_messagefont,32,0,0)
global.font = font_add_sprite(spr_spritefont,ord('!'),1,-1)
global.wdigits = font_add_sprite(spr_numbers,ord('0'),0,0)
global.gdigits = font_add_sprite(spr_numbersgold,ord('0'),0,0)
keyboard_set_map(ord('X'),vk_shift)
keyboard_set_map(ord('Z'),vk_control)
scr_init_globals()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_deactivate_all(1)
instance_activate_object(obj_mariostart)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode = 0
if not instance_exists(obj_mariostart)
{
    done = 0
    instance_activate_all()
}
if background_exists(back)
    background_delete(back)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Quit the game when ALT+F4 is pressed
if keyboard_check_pressed(vk_f4)
    game_end()

//Restart the game when ALT+R is pressed
else if keyboard_check_pressed(ord('R'))
{
    audio_stop_all()
    scr_init_globals()
    room_goto(rm_title)
}

//Turn off filtering if ALT+1 is pressed
else if keyboard_check_pressed(ord('1'))
{
    filter = 0
    window_set_size(view_wview[0],view_hview[0])
}

//Turn on HQ2X filtering if ALT+2 is pressed
else if keyboard_check_pressed(ord('2'))
{
    filter = 1
    window_set_size(view_wview[0]*2,view_hview[0]*2)
}

//Turn on HQ4X filtering if ALT+3 is pressed
else if keyboard_check_pressed(ord('3'))
{
    filter = 2
    window_set_size(view_wview[0]*4,view_hview[0]*4)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Fade to black
if mode = 0
{
    back = background_create_from_surface(view_surface_id[0],0,0,view_wview[0],view_hview[0],0,0)
    effect_clear()
    instance_deactivate_all(1)
}
done = 0
mode = 1
alarm[0] = 30
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Prepare to fade to black
mode = 1
back = background_create_from_surface(view_surface_id[0],0,0,view_wview[0],view_hview[0],0,0)
if surface_exists(view_surface_id[0])
    surface_free(view_surface_id[0])
alarm[1] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_surface_id[0] = surface_create(view_wview[0],view_hview[0])
if mode = 1
    event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Save Fullscreen + Filtering Settings

//Open the file
var file = file_text_open_write("Settings.dat")

//Save fullscreen settings
file_text_write_string(file,string(window_get_fullscreen()))
file_text_writeln(file)

//Save filtering settings
file_text_write_string(file,string(filter))

//Close the file
file_text_close(file)

//Sticky Control Key Bug Fix
keyboard_key_release(vk_control)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Load Fullscreen + Filtering Settings
if file_exists("Settings.dat")
{
    //Open the file 
    var file = file_text_open_read("Settings.dat")

    //Set fullscreen mode based on the read value
    window_set_fullscreen(real(file_text_read_string(file)))
    file_text_readln(file)

    //Set filtering mode based on the read value
    filter = real(file_text_read_string(file))

    //Close the file
    file_text_close(file)

    //HQ2x
    if filter = 1
        window_set_size(view_wview[0]*2,view_hview[0]*2)
    //HQ4X
    else if filter = 2
        window_set_size(view_wview[0]*4,view_hview[0]*4)
}
else
    filter = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draws the game surface
if surface_exists(view_surface_id[0])
{
    draw_set_blend_mode_ext(bm_one,bm_src_alpha_sat)

    //No Filter
    if filter = 0
        draw_surface(view_surface_id[0],0,0)

    //HQ2X Filtering
    else if filter = 1
    {
        shader_set(sha_hq2x)
        draw_surface_stretched(view_surface_id[0],0,0,view_wview[0]*2,view_hview[0]*2)
        shader_reset()
    }

    //HQ4X Filtering
    else if filter = 2
    {
        shader_set(sha_hq4x)
        draw_surface_stretched(view_surface_id[0],0,0,view_wview[0]*4,view_hview[0]*4)
        shader_reset()
    }

    draw_set_blend_mode(bm_normal)
}
else
    view_surface_id[0] = surface_create(view_wview[0],view_hview[0])

//Fades the screen to and from black
if done &lt; 1
{
    if mode = 0
        draw_set_alpha(1-done)
    else
        draw_set_alpha(done)
    draw_set_color(c_black)
    if filter = 0
        draw_rectangle(0,0,view_wview[0],view_hview[0],0)
    else if filter = 1
        draw_rectangle(0,0,view_wview[0]*2,view_hview[0]*2,0)
    else if filter = 2
        draw_rectangle(0,0,view_wview[0]*4,view_hview[0]*4,0)
    done += 1/30
    draw_set_alpha(1)
    draw_set_color(c_white)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draws the screenshot shown when fading to black
if background_exists(back)
{
    draw_set_blend_mode_ext(bm_one,bm_src_alpha_sat)
    draw_background(back,view_xview[0],view_yview[0])
    draw_set_blend_mode(bm_normal)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
