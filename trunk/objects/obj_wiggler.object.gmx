<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wiggler</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>spr_enemymask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Everyone's favorite caterpillar

//How vulnerable is this enemy to various items?
hardness = 2

//How vulnerable is this enemy to Mario?
stomp = 5

//Facing direction
direct = -1

//Start walking towards Mario
alarm[10] = 2

//Animate
image_speed = 0.15

//Not angry
ready = 0

//Previous horizontal speed
prevhspeed = 0

//Body parts
mybody[0] = instance_create(x,y,obj_wiggler_body)
mybody[1] = instance_create(x,y,obj_wiggler_body)
mybody[2] = instance_create(x,y,obj_wiggler_body)
mybody[3] = instance_create(x,y,obj_wiggler_body)

//Let the body know who's their owner
mybody[0].parent = id
mybody[1].parent = id
mybody[2].parent = id
mybody[3].parent = id

//Offset values
mybody[0].offset = 10
mybody[1].offset = 18
mybody[2].offset = 26
mybody[3].offset = 34

//Animation stuff
mybody[1].image_index = 1
mybody[2].image_index = 2
mybody[3].image_index = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy body parts
with mybody[0] instance_destroy()
with mybody[1] instance_destroy()
with mybody[2] instance_destroy()
with mybody[3] instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Detect Mario, and walk towards him

//Default event
event_inherited()

//Turn around script
event_user(15)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go after Mario
if instance_exists(obj_mario)
{
    if obj_mario.x &lt; x
    and hspeed &gt; 0
    {
        hspeed = -1
        event_user(15)
    }
    else if obj_mario.x &gt; x
    and hspeed &lt; 0
    {
        hspeed = 1
        event_user(15)
    }
    else
        alarm[0] = 50
}
else
    alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make sure body parts do not get lost
if not instance_exists(mybody[0])
    instance_activate_object(mybody[0])
if not instance_exists(mybody[1])
    instance_activate_object(mybody[1])
if not instance_exists(mybody[2])
    instance_activate_object(mybody[2])
if not instance_exists(mybody[3])
    instance_activate_object(mybody[3])
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wiggler hates to walk off ledges

//Remember horizontal speed
prevhspeed = hspeed

//Default event
event_inherited()

//Turn at ledges
event_user(6)

//If wiggler's speed changed, turn around
if prevhspeed != hspeed
    event_user(15)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solidtop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Floor collision
if y &lt; other.y-11 and vspeed &gt; 0
{
    y = other.y-16
    vspeed = 0
    gravity = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn around

//Change facing direction
if hspeed &gt; 0
    direct = 1
else
    direct = -1

//Make body parts turn around in order
if ready = 0
{
    mybody[0].alarm[0] = 20
    mybody[1].alarm[0] = 36
    mybody[2].alarm[0] = 52
    mybody[3].alarm[0] = 68
}

//Faster if angry, and continue chasing Mario
else
{
    mybody[0].alarm[0] = 10
    mybody[1].alarm[0] = 18
    mybody[2].alarm[0] = 26
    mybody[3].alarm[0] = 34
    alarm[0] = 50
}

//Set their next direction
mybody[0].nextdirect = direct
mybody[1].nextdirect = direct
mybody[2].nextdirect = direct
mybody[3].nextdirect = direct
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wiggler stomp

//Play stomp sound if wiggler is angry
if ready = 1
    audio_play_sound(snd_stomp,0,0)

//Otherwise
else
{

    //Musical scale
    scr_musicalscale(obj_mario.id,1)

    //Kill flower
    with instance_create(x-4*direct,y+16,obj_enemy_dead) sprite_index = spr_wiggler_flower

    //Make angry
    ready = 1
    sprite_index = spr_wiggler_mad
    image_speed = 0.3
    hspeed = hspeed*2

    //Make body parts angry
    for(var i = 0; i &lt; 4; i++)
    {
        with mybody[i]
        {
            ready = 1
            sprite_index = spr_wiggler_madbody
            image_speed = 0.3
            hspeed = hspeed*2
        }
    }

    //Go after Mario
    alarm[0] = 50

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wiggler death
with instance_create(x,y+16,obj_enemy_dead)
{
    sprite_index = other.sprite_index
    image_index = other.image_index
    image_xscale = other.image_xscale
}

//Make the other body parts too
with instance_create(x,y+16,obj_enemy_multidead)
{
    if other.sprite_index = spr_wiggler_mad
        killsprite = spr_wiggler_madbody
    else
        killsprite = spr_wiggler_body
    killxscale = other.image_xscale
    count = 4
}

//Destroy
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Wiggler
draw_sprite_ext(sprite_index,image_index,round(x),y,direct,1,0,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,10</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
