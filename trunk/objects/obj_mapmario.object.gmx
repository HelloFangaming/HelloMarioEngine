<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mapmario_small</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.15
if ds_map_exists(global.mapscreen,"returnx")
{
    returnx = ds_map_find_value(global.mapscreen,"returnx")
    returny = ds_map_find_value(global.mapscreen,"returny")
    x = ds_map_find_value(global.mapscreen,"mapx")
    y = ds_map_find_value(global.mapscreen,"mapy")
    from = ds_map_find_value(global.mapscreen,"from")
}
else
{
    returnx = x
    returny = y
    from = 0
    ds_map_add(global.mapscreen,"returnx",x)
    ds_map_add(global.mapscreen,"returny",y)
    ds_map_add(global.mapscreen,"mapx",x)
    ds_map_add(global.mapscreen,"mapy",y)
    ds_map_add(global.mapscreen,"from",y)
}
ready = 0
io_clear()
global.time = 0
global.mariostart = 0
global.carrieditem = 0
global.carriedsprite = 0
global.pswitch = 0
global.star = 0
global.onoffblock = 0
if global.yoshi = 2
global.yoshi = 0
ds_map_clear(global.acecoins)
if lives = 0
{
    room_goto(rmGameOver)
    exit
}
if global.died = 1
and global.clear = 0
{
    audio_play_sound(snd_spin,1,1)
    move_towards_point(returnx,returny,1)
    ready = 2
}
global.died = 0
if global.clear &gt; 0
{
    ready = 1
    alarm[2] = 30
}
if ready = 0
    alarm[3] = 1
event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_mapmusic,99,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.clear = 1
    instance_create(x,y,obj_opener)
if global.clear = 2
    instance_create(x,y,obj_opener2)
alarm[1] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_mapmusic,99,1)
if global.clear &gt; 0
and collision_point(x+8,y+8,obj_saver,1,1)
    instance_create(0,0,obj_savemenu)
if score &gt; global.cardscore
and not instance_exists(obj_mapcard)
{
    global.cardscore += 80000
    if returnx = x
    and returny = y
        instance_create(obj_start.x,obj_start.y,obj_mapcard)
    else
        instance_create(returnx,returny,obj_mapcard)
}
global.clear = 0
returnx = x
returny = y
ready = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ready = 2
and round(x) = returnx
and round(y) = returny
{
    audio_stop_sound(snd_spin)
    ready = 1
    speed = 0
    x =  round(x)
    y = round(y)
    alarm[1] = 60
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Inventory Items
global.state = global.inventory[obj_mapboxdrawer.boxselection]
audio_play_sound(snd_retrieve,0,0)
if global.state = 1
    audio_play_sound(snd_jwin,0,0)
else
    audio_play_sound(snd_gotcha,0,0)
event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Swaps Reserve Items
if global.reserveitem != 0
{
    temp = global.state
    global.state = global.reserveitem
    global.reserveitem = temp
    audio_play_sound(snd_retrieve,0,0)
    if global.state = 1
        audio_play_sound(snd_jwin,0,0)
    else
        audio_play_sound(snd_gotcha,0,0)
    temp = 0
    event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_mapmusic)
audio_play_sound(snd_enterstage,0,0)
audio_play_sound(snd_letsgo,0,0)
if global.yoshi = 1
    audio_play_sound(snd_yoshi_happy,0,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.state = 0
    sprite_index = spr_mapmario_small
if global.state = 1
    sprite_index = spr_mapmario_big
if global.state = 2
    sprite_index = spr_mapmario_fire
if global.state = 3
    sprite_index = spr_mapmario_hammer
if global.state = 4
    sprite_index = spr_mapmario_leaf
if global.state = 5
    sprite_index = spr_mapmario_tanooki
if global.state = 6
    sprite_index = spr_mapmario_frog
if global.state = 7
    sprite_index = spr_mapmario_bomb
if global.state = 8
    sprite_index = spr_mapmario_ice
if global.state = 9
    sprite_index = spr_mapmario_super
if global.state = 10
    sprite_index = spr_mapmario_carrot
if global.state = 11
    sprite_index = spr_mapmario_ninja
if global.state = 12
    sprite_index = spr_mapmario_bee
if global.state = 13
    sprite_index = spr_mapmario_shell
if global.state = 14
    sprite_index = spr_mapmario_penguin
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_replace(global.mapscreen,"returnx",returnx)
ds_map_replace(global.mapscreen,"returny",returny)
ds_map_replace(global.mapscreen,"mapx",x)
ds_map_replace(global.mapscreen,"mapy",y)
ds_map_replace(global.mapscreen,"from",from)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ready = 1
{
    draw_sprite(spr_mapevent,-1,x,y)
    exit
}
if global.yoshi = 0
    draw_sprite(sprite_index,-1,x,y)
else if global.yoshi = 1
{
    draw_sprite(sprite_index,-1,x,y-7)
    if global.ycolor = 0
        draw_sprite(spr_mapyoshi,-1,x,y)
    else if global.ycolor = 1
        draw_sprite(spr_mapyoshi_r,-1,x,y)
    else if global.ycolor = 2
        draw_sprite(spr_mapyoshi_y,-1,x,y)
    else if global.ycolor = 3
        draw_sprite(spr_mapyoshi_b,-1,x,y)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ready = 0
and speed = 0
{
    if place_free(x,y+12)
    {
        if collision_point(x+8,y+8,obj_panelparent,0,0)
            if from != 0
            and collision_point(x+8,y+8,obj_panelparent,0,0).beaten = 0
            {
                audio_play_sound(snd_bump,0,0)
                exit
            }
        audio_play_sound(snd_move,0,0)
        vspeed = 2
        alarm[0] = 16
        from = 1
    }
    else
        audio_play_sound(snd_bump,0,0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ready = 0
and speed = 0
{
    if place_free(x+12,y)
    {
        if collision_point(x+8,y+8,obj_panelparent,0,0)
            if from != 2
            and collision_point(x+8,y+8,obj_panelparent,0,0).beaten = 0
            {
                audio_play_sound(snd_bump,0,0)
                exit
            }
        audio_play_sound(snd_move,0,0)
        hspeed = 2
        alarm[0] = 16
        from = 3
    }
    else
        audio_play_sound(snd_bump,0,0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ready = 0
and speed = 0
{
    if place_free(x,y-4)
    {
        if collision_point(x+8,y+8,obj_panelparent,0,0)
            if from != 1
            and collision_point(x+8,y+8,obj_panelparent,0,0).beaten = 0
            {
                audio_play_sound(snd_bump,0,0)
                exit
            }
        audio_play_sound(snd_move,0,0)
        vspeed = -2
        alarm[0] = 16
        from = 0
    }
    else
        audio_play_sound(snd_bump,0,0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ready = 0
and speed = 0
{
    if place_free(x-4,y)
    {
        if collision_point(x+8,y+8,obj_panelparent,0,0)
            if from != 3
            and collision_point(x+8,y+8,obj_panelparent,0,0).beaten = 0
            {
                audio_play_sound(snd_bump,0,0)
                exit
            }
        audio_play_sound(snd_move,0,0)
        hspeed = -2
        alarm[0] = 16
        from = 2
    }
    else
        audio_play_sound(snd_bump,0,0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
