<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_veggie</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_physicsparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Parent of all SMB2 carriable items

//Do not animate
image_speed = 0

//Whether this object is not held
held = 0

//Number of kills
hitpoint = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Protect Mario from the horrors of holding nothing
if held = 0
{
    with obj_mario holding = 0
    with obj_warpmario holding = 0
    with obj_doormario holding = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If the item is bring held
if held = 0
{

    //If Mario exists
    if instance_exists(obj_mario)
    {

        //Snap to position
        x = obj_mario.x-sprite_width/2+sprite_xoffset
        y = obj_mario.y+11

        //Make sure Mario is carrying
        obj_mario.holding = 1

        ///Throw items
        if keyboard_check_pressed(vk_control)
        and obj_mario.disablecontrols = 0
        {

            //No longer being held
            held = 1

            //Hah!
            audio_play_sound(snd_hah,0,0)

            //Play throw sound
            audio_play_sound(snd_throw,0,0)

            //Reset holding variable
            obj_mario.alarm[0] = 2

            //Gravity
            gravity = 0.25

            //Get thrown
            event_user(2)

        }

        //Be visible
        visible = 1

    }

    //If warp Mario exists
    else if instance_exists(obj_warpmario)
    {

        //Let warp Mario draw the item
        obj_warpmario.myitem = sprite_index

        //Snap to position
        x = obj_warpmario.x-sprite_width/2+sprite_xoffset
        y = obj_warpmario.y

        //Make sure Mario is carrying
        obj_warpmario.holding = 2

        //Be invisible
        visible = 0

    }

    //If door Mario exists
    else if instance_exists(obj_doormario)
    {

        //Let door Mario draw the item
        obj_doormario.myitem = sprite_index

        //Snap to position
        x = obj_doormario.x-sprite_width/2+sprite_xoffset
        y = obj_doormario.y+16

        //Make sure Mario is carrying
        obj_doormario.holding = 2

        //Be invisible
        visible = 0

    }

    //If warp note block exists
    else if instance_exists(obj_warpnoteblock)
    {

        //Snap to position
        x = obj_warpnoteblock.x-sprite_width/2+sprite_xoffset
        y = obj_warpnoteblock.y+11

        //Be visible
        visible = 1

    }

    //If jump spawn exists
    else if instance_exists(obj_jumpspawn)
    {

        //Snap to position
        x = obj_jumpspawn.x-sprite_width/2+sprite_xoffset
        y = obj_jumpspawn.y+11

        //Be visible
        visible = 1

    }

    //Otherwise, stop being held
    else
    {
        held = 1
        gravity = 0.25
        exit
    }

    //Move up if flipped vertically
    if image_yscale = 1
        y -= sprite_height

    //Move down if Mario is small
    if global.powerup = cs_small
        y += 10

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If the item is not bring held
if held = 1
{

    //Cap fall speed
    if vspeed &gt; 4
        vspeed = 4

    //Destroy outside view
    if outside_view()
        instance_destroy()

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hurt enemies
if held = 1
and vspeed &gt; 0
and other.hardness &lt; 99
{
    scr_musicalscale(id,other.id,1)
    hspeed = hspeed/2
    vspeed = -3
    with other event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default thrown event
hspeed = obj_mario.hspeed+2*obj_mario.direct
vspeed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remember the held item when the room ends
if held = 0
{
    global.carrieditem = object_index
    global.carriedsprite = sprite_index
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
