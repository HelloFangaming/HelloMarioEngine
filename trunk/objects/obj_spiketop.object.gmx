<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spiketop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>spr_enemymask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Walks around solid surfaces

//How vulnerable is this enemy to various items?
hardness = 1

//How vulnerable is this enemy to Mario?
stomp = 1

//Facing direction
direct = -1

//Start walking towards Mario
alarm[10] = 2

//Animate
image_speed = 0.15

//Changing surface state
ready = 0

//Surface being walked on
dir = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Detect Mario, and walk towards him
if not instance_exists(obj_mario)
or obj_mario.x &lt; x
    direct = -1
else
    direct = 1

//Select a surface to walk on
if position_meeting(x,y+20,obj_solidtop)
{
    hspeed = 0.5*direct
    dir = 0
}
else if position_meeting(x,y-1,obj_solid)
{
    hspeed = -0.5*direct
    dir = 2
}
else if position_meeting(x-9,y+8,obj_solid)
{
    vspeed = 0.5*direct
    dir = 3
}
else if position_meeting(x+8,y+8,obj_solid)
{
    vspeed = -0.5*direct
    dir = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset state
ready = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change direction

//Change sprite back to normal
sprite_index = spr_spiketop

//Figure out the appropriate direction to walk in
if direction = 90
{
    hspeed = 0.5*direct
    dir = 0
}
else if direction = 0
{
    vspeed = 0.5*direct
    dir = 3
}
else if direction = 270
{
    hspeed = -0.5*direct
    dir = 2
}
else if direction = 180
{
    vspeed = -0.5*direct
    dir = 1
}

//Reset state
alarm[1] = 7
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spiketop logic

//Turn at enemies
if (hspeed &gt; 0 and collision_rectangle(bbox_right,bbox_top,bbox_right+hspeed*2,bbox_bottom,obj_enemyparent,0,1))
or (hspeed &lt; 0 and collision_rectangle(bbox_left+hspeed*2,bbox_top,bbox_left,bbox_bottom,obj_enemyparent,0,1))
{
    hspeed = -hspeed
    direct = -direct
}
if (vspeed &gt; 0 and collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+vspeed*2,obj_enemyparent,0,1))
or (vspeed &lt; 0 and collision_rectangle(bbox_left,bbox_top+vspeed*2,bbox_right,bbox_top,obj_enemyparent,0,1))
{
    vspeed = -vspeed
    direct = -direct
}

//Turn at walls
if (hspeed &gt; 0 and collision_rectangle(bbox_right+hspeed,bbox_top,bbox_right+hspeed,bbox_bottom,obj_solid,0,0))
or (hspeed &lt; 0 and collision_rectangle(bbox_left+hspeed,bbox_top,bbox_left+hspeed,bbox_bottom,obj_solid,0,0))
{
    hspeed = -hspeed
    direct = -direct
}
if (vspeed &gt; 0 and collision_rectangle(bbox_left,bbox_bottom+vspeed,bbox_right,bbox_bottom+vspeed,obj_solidtop,0,0))
or (vspeed &lt; 0 and collision_rectangle(bbox_left,bbox_top+vspeed,bbox_right,bbox_top+vspeed,obj_solid,0,0))
{
    vspeed = -0.5
    direct = -direct
}

//If the enemy is not turning, and is not on a surface
if ready = 0
and not collision_rectangle(bbox_left,bbox_top-1,bbox_right,bbox_bottom+1,obj_solidtop,0,0)
and not collision_rectangle(bbox_left-1,bbox_top,bbox_right+1,bbox_bottom,obj_solid,0,0)
{

    //Turn state
    ready = 1

    //Stop moving
    speed = 0

    //Change sprite
    sprite_index = spr_spiketop_turn

    //Change direction later
    alarm[0] = 7

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Spiketop
if dir = 0
    draw_sprite_ext(sprite_index,image_index,round(x),y,direct,1,0,c_white,1)
else if dir = 1
    draw_sprite_ext(sprite_index,image_index,round(x)-8,round(y)+8,direct,1,90,c_white,1)
else if dir = 2
    draw_sprite_ext(sprite_index,image_index,round(x),round(y)+15,direct,1,180,c_white,1)
else if dir = 3
    draw_sprite_ext(sprite_index,image_index,round(x)+7,round(y)+8,direct,1,270,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
