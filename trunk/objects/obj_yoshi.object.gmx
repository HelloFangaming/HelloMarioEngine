<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_yoshi_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Yoshi is being ridden

//On Yoshi
global.yoshi = 1

//Is Yoshi licking?
licking = 0

//What is in Yoshi's mouth?
inmouth = noone

//Sprite of item in mouth
mouthsprite = noone

//Animation
anim = 0

//Mario's previous state
stateprev = 0

//Is Yoshi jumping?
jumping = 0

//Is blue Yoshi flying?
flying = 0

//Flying animation
flyanim = 1

//If an item was carried over
if global.carrieditem != noone
{

    //Remember the item
    inmouth = global.carrieditem

    //Reset the item
    global.carrieditem = noone

    //Remember the sprite
    mouthsprite = global.carriedsprite

    //Reset the sprite
    global.carriedsprite = noone

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Yoshi

//Not on Yoshi
global.yoshi = 0

//Reset Mario's holding variable
with obj_mario holding = 0

//Destroy tongue
with obj_tongue instance_destroy()

//If something is in its mouth, spit it out
if instance_exists(obj_mario)
and inmouth != noone
    event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make flying noises for blue Yoshi
if flying = 1
{
    audio_play_sound(snd_lick,0,0)
    alarm[3] = 15
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Finish licking
licking = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Begin finishing the licking process
anim = 0
alarm[2] = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start licking
anim = 1
instance_create(x,y,obj_tongue)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Yoshi logic

//If Mario exists
if instance_exists(obj_mario)
{

    //Snap to position
    x = obj_mario.x
    y = obj_mario.y

    //Force him to be invisible
    obj_mario.visible = 0

    //Force him to hold Yoshi
    obj_mario.holding = 3

    //If Yoshi is not licking anything
    if licking = 0
    {

        //Check whether Mario is jumping
        if obj_mario.state = 2
            jumping = 1
        else
            jumping = 0

        //Use stand pose if standing
        if obj_mario.state = 0
            image_index = 0

        //Animate when walking
        else if obj_mario.state = 1
            image_speed = 0.15

        //Otherwise, if the mouth is empty
        else if inmouth = noone
        {

            //Choose a pose based on vertical speed
            if obj_mario.vspeed &gt; 0
                image_index = 1
            else
                image_index = 0

        }

        //Otherwise, use this image index
        else
            image_index = 1

    }

    //If Yoshi is not licking and control is pressed
    if licking = 0
    and keyboard_check_pressed(vk_control)
    and obj_mario.disablecontrols = 0
    {

        //If mouth is empty, start licking
        if inmouth = noone
        {
            audio_play_sound(snd_lick,0,0)
            licking = 1
            alarm[0] = 5
            anim = 0
        }

        //Otherwise, spit
        else
            event_user(0)

    }

    //If yellow Yoshi has something in its mouth
    if global.ycolor = 2
    and inmouth != noone
    {

        //If Mario lands after a jump, stomp
        if stateprev = 2
        and obj_mario.state != 2
            instance_create(x,y+16,obj_stomp)

        //Remember last state
        stateprev = obj_mario.state

    }

    //If Yoshi is blue
    else if global.ycolor = 3
    {

        //If shift is held outside water while mouth is full
        if keyboard_check(vk_shift)
        and obj_mario.isswim = 0
        and inmouth != noone
        {

            //If not flying and moving down, start flying
            if flying = 0
            and obj_mario.vspeed &gt; 0
            {
                flying = 1
                alarm[3] = 1
            }

            //When flying
            if flying = 1
            {

                //Move up if there is no ceiling above Mario
                with obj_mario
                {
                    if not collision_rectangle(bbox_left,bbox_top-3,bbox_right,bbox_top,obj_solid,1,0)
                        vspeed = -2
                }

                //Sync animation with level manager
                flyanim = obj_levelmanager.anim

            }

            //Reset animation otherwise
            else
                flyanim = 0

        }

        //Otherwise, stop flying
        else
        {
            flying = 0
            flyanim = 1
        }

    }

    //Depth
    depth = -5

}

//If goal Mario exists
else if instance_exists(obj_goalmario)
{

    //Snap to position
    x = obj_goalmario.x
    y = obj_goalmario.y

    //Force him to be invisible
    obj_goalmario.visible = 0

    //Use walk sprites
    jumping = 0

    //Use stand pose when still
    if obj_goalmario.hspeed = 0
        image_index = 0

    //Animate when walking
    else
        image_speed = 0.15

    //Depth
    depth = -5

}

//If warp Mario exists
else if instance_exists(obj_warpmario)
{

    //Snap to position
    x = obj_warpmario.x
    y = obj_warpmario.y

    //Force him to be invisible
    obj_warpmario.visible = 0

    //Use walk sprites
    jumping = 0

    //Use stand pose when still
    if obj_warpmario.hspeed = 0
        image_index = 0

    //Animate when walking
    else
        image_speed = 0.15

    //Stay invisible in pipes
    if obj_warpmario.speed = 3
        visible = 0
    else
        visible = 1

    //Depth
    depth = 11

}

//If warp note block exists
else if instance_exists(obj_warpnoteblock)
{

    //Snap to position
    x = obj_warpnoteblock.x
    y = obj_warpnoteblock.y

    //Force him to be invisible
    obj_warpnoteblock.visible = 0

    //Use jump sprites
    jumping = 1

    //Use correct pose
    image_index = 0

    //Depth
    depth = -5

}

//If jump spawn exists
else if instance_exists(obj_jumpspawn)
{

    //Snap to position
    x = obj_jumpspawn.x
    y = obj_jumpspawn.y

    //Force him to be invisible
    obj_jumpspawn.visible = 0

    //Use jump sprites
    jumping = 1

    //Use correct pose
    image_index = 0

    //Depth
    depth = -5

}

//If Mario dies, destroy
else if instance_exists(obj_deadmario)
    instance_destroy()

//Use licking sprites when licking
if licking = 1
{
    if global.ycolor = 0
        sprite_index = spr_yoshi_lick
    else if global.ycolor = 1
        sprite_index = spr_yoshi_lick_r
    else if global.ycolor = 2
        sprite_index = spr_yoshi_lick_y
    else if global.ycolor = 3
        sprite_index = spr_yoshi_lick_b
    image_index = anim
}

//Otherwise
else
{

    //If mouth is full, use hold sprites
    if inmouth != noone
    {
        if global.ycolor = 0
            sprite_index = spr_yoshi_hold
        else if global.ycolor = 1
            sprite_index = spr_yoshi_hold_r
        else if global.ycolor = 2
            sprite_index = spr_yoshi_hold_y
        else if global.ycolor = 3
            sprite_index = spr_yoshi_hold_b
    }

    //If walking, use walk sprites
    else if jumping = 0
    {
        if global.ycolor = 0
            sprite_index = spr_yoshi_walk
        else if global.ycolor = 1
            sprite_index = spr_yoshi_walk_r
        else if global.ycolor = 2
            sprite_index = spr_yoshi_walk_y
        else if global.ycolor = 3
            sprite_index = spr_yoshi_walk_b
    }

    //Otherwise, use jump sprites
    else
    {
        if global.ycolor = 0
            sprite_index = spr_yoshi_jump
        else if global.ycolor = 1
            sprite_index = spr_yoshi_jump_r
        else if global.ycolor = 2
            sprite_index = spr_yoshi_jump_y
        else if global.ycolor = 3
            sprite_index = spr_yoshi_jump_b
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Abandon Yoshi
with instance_create(x,y,obj_yoshi_abandon)
{
    if global.ycolor = 1
        sprite_index = spr_yoshi_walk_r
    else if global.ycolor = 2
        sprite_index = spr_yoshi_walk_y
    else if global.ycolor = 3
        sprite_index = spr_yoshi_walk_b
    if instance_exists(obj_mario)
        direct = obj_mario.direct
}

//Make Mario visible and spin jumping
with obj_mario
{
    visible = 1
    stompstyle = 1
}

//Destroy
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spit out an item

//If Yoshi has fire in its mouth
if inmouth = obj_yoshifire
{

    //Make a fiery sound
    audio_play_sound(snd_flames,0,0)

    //Make Yoshi fire
    with instance_create(x,y,obj_yoshifire)
    {
        hspeed = obj_mario.direct*3
        vspeed = -1
    }
    with instance_create(x,y,obj_yoshifire)
    {
        hspeed = obj_mario.direct*3
        vspeed = 1
    }
    with instance_create(x,y,obj_yoshifire) hspeed = obj_mario.direct*3

}

//Otherwise
else
{

    //Play spit sound
    audio_play_sound(snd_spit,0,0)

    //Spit out the item
    with instance_create(x-8+obj_mario.direct*2,y+1,inmouth)
    {

        //Use the correct sprite
        sprite_index = other.mouthsprite

        //Shells need to be spit in a special way
        if object_index = obj_shell
        {
            hspeed = 3*obj_mario.direct
            event_user(15)
        }

        //Spit out any other item normally
        else
            event_user(2)

    }

}

//Reset mouth item
inmouth = noone

//Reset item sprite
mouthsprite = noone

//Licking
licking = 1

//Stop licking
alarm[2] = 5

//Lick animation
anim = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remember carried items
global.carrieditem = inmouth
global.carriedsprite = mouthsprite
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Yoshi

//If Mario exists
if instance_exists(obj_mario)
{

    //Make Mario flash
    if obj_mario.isflashing = 1
        shader_set(sha_invert)

    //Draw Yoshi
    draw_sprite_ext(sprite_index,image_index,round(x),y,obj_mario.direct,1,0,c_white,1)

    //Draw Mario
    draw_sprite_ext(scr_marioride(),0,round(x)-5*obj_mario.direct,y-9,obj_mario.direct,1,0,c_white,obj_mario.image_alpha)

    //If blue Yoshi has something in it mouth, draw a wing
    if global.ycolor = 3
    and inmouth != noone
        draw_sprite_ext(spr_wing,flyanim,round(x)-6*obj_mario.direct,y+6,obj_mario.direct,1,0,c_white,obj_mario.image_alpha)

    //Reset flashing
    if obj_mario.isflashing = 1
        shader_reset()

}

//If warp Mario exists
else if instance_exists(obj_warpmario)
{

    //Make Mario flash
    if obj_warpmario.isflashing = 1
        shader_set(sha_invert)

    //Draw Yoshi
    draw_sprite_ext(sprite_index,image_index,round(x),y,obj_warpmario.direct,1,0,c_white,1)

    //Draw Mario
    draw_sprite_ext(scr_marioride(),0,round(x)-5*obj_warpmario.direct,y-9,obj_warpmario.direct,1,0,c_white,1)

    //Reset flashing
    if obj_warpmario.isflashing = 1
        shader_reset()

}

//If note block Mario exists
else if instance_exists(obj_warpnoteblock)
{

    //Draw Yoshi
    draw_sprite_ext(sprite_index,image_index,round(x),y,obj_warpnoteblock.direct,1,0,c_white,1)

    //Draw Mario
    draw_sprite_ext(scr_marioride(),0,round(x)-5*obj_warpnoteblock.direct,y-9,obj_warpnoteblock.direct,1,0,c_white,1)

}

//If jump spawn exists
else if instance_exists(obj_jumpspawn)
{

    //Draw Yoshi
    draw_sprite_ext(sprite_index,image_index,round(x),y,1,1,0,c_white,1)

    //Draw Mario
    draw_sprite_ext(scr_marioride(),0,round(x)-5,y-9,1,1,0,c_white,1)

}

//If goal Mario exists
else if instance_exists(obj_goalmario)
{

    //Draw Yoshi
    draw_sprite_ext(sprite_index,image_index,round(x),y,obj_goalmario.image_xscale,1,0,c_white,obj_goalmario.image_alpha)

    //Draw Mario
    draw_sprite_ext(scr_marioride(),0,round(x)-5*obj_goalmario.image_xscale,y-9,obj_goalmario.image_xscale,1,0,c_white,obj_goalmario.image_alpha)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
